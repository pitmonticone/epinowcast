[{"path":[]},{"path":"epiforecasts.io/epinowcast/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"epiforecasts.io/epinowcast/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"epiforecasts.io/epinowcast/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"epiforecasts.io/epinowcast/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"epiforecasts.io/epinowcast/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement [INSERT CONTACT METHOD]. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"epiforecasts.io/epinowcast/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"epiforecasts.io/epinowcast/CODE_OF_CONDUCT.html","id":"1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"epiforecasts.io/epinowcast/CODE_OF_CONDUCT.html","id":"2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"epiforecasts.io/epinowcast/CODE_OF_CONDUCT.html","id":"3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"epiforecasts.io/epinowcast/CODE_OF_CONDUCT.html","id":"4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"epiforecasts.io/epinowcast/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/ code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https:// www.contributor-covenant.org/translations.","code":""},{"path":"epiforecasts.io/epinowcast/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 epinowcast authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"epiforecasts.io/epinowcast/articles/germany-age-stratified-nowcasting.html","id":"packages","dir":"Articles","previous_headings":"","what":"Packages","title":"Hierarchical nowcasting of age stratified COVID-19 hospitalisations in Germany","text":"use epinowcast package, data.table purrr data manipulation, ggplot2 plotting, knitr produce tables output, loo approximately evaluate sample performance scoringutils evaluate sample forecast performance. vignette includes several models take upwards 10 minutes fit data moderately equipped laptop. speed model fitting CPUs available set number threads used per chain half number real cores available (2 using 2 MCMC chains 4 real cores). Note may cause conflicts processes running computer issue reduce number threads used.","code":"library(epinowcast) library(data.table) library(purrr) library(ggplot2) library(loo) library(scoringutils) library(knitr) threads <- 2"},{"path":"epiforecasts.io/epinowcast/articles/germany-age-stratified-nowcasting.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"Hierarchical nowcasting of age stratified COVID-19 hospitalisations in Germany","text":"Nowcasting effectively estimation reporting patterns recently reported data. requires data patterns previous observations typically means time series data reported multiple consecutive days (theory non-consecutive days used yet supported epinowcast). use COVID-19 hospitalisations date positive test Germany stratified age group available 1st September 2020 (40 days data included prior ) example data available real-time hospitalisations date positive test available 20th October represent hospitalisations finally reported. data sourced Robert Koch Institute via Germany Nowcasting hub deconvolved weekly data days negative reported hospitalisations adjusted. first filter data available 1st September last 40 days. Similarly find data available 20th October dates serve target “true” data.","code":"nat_germany_hosp <- epinowcast::germany_covid19_hosp[location == \"DE\"]  retro_nat_germany <- enw_retrospective_data(   nat_germany_hosp,   rep_date = as.Date(\"2021-09-01\"), ref_date = as.Date(\"2021-09-01\") - 40 ) retro_nat_germany #>       reference_date location age_group confirm report_date #>    1:     2021-07-23       DE       00+      30  2021-07-23 #>    2:     2021-07-24       DE       00+      31  2021-07-24 #>    3:     2021-07-25       DE       00+       8  2021-07-25 #>    4:     2021-07-26       DE       00+       9  2021-07-26 #>    5:     2021-07-27       DE       00+      35  2021-07-27 #>   ---                                                       #> 6023:     2021-07-23       DE     05-14       1  2021-09-01 #> 6024:     2021-07-23       DE     15-34      21  2021-09-01 #> 6025:     2021-07-23       DE     35-59      39  2021-09-01 #> 6026:     2021-07-23       DE     60-79      21  2021-09-01 #> 6027:     2021-07-23       DE       80+       5  2021-09-01 latest_nat_germany <- enw_retrospective_data(   nat_germany_hosp,   rep_date = as.Date(\"2021-10-20\"), ref_date = as.Date(\"2021-09-01\") - 40 ) latest_nat_germany <- latest_nat_germany[   reference_date <= as.Date(\"2021-09-01\") ] latest_nat_germany <- enw_latest_data(latest_nat_germany)"},{"path":"epiforecasts.io/epinowcast/articles/germany-age-stratified-nowcasting.html","id":"data-preprocessing","dir":"Articles","previous_headings":"","what":"Data preprocessing","title":"Hierarchical nowcasting of age stratified COVID-19 hospitalisations in Germany","text":"epinowcast works assuming data preprocessed reporting format requires coupled meta data reference report dates. enw_preprocess_data() can used though users can also use internal functions produce custom preprocessing steps. stage arbitrary groupings observations can defined propagated throughout subsequent modelling steps. data stratified age grouped age group principle grouping combination groups independent reference report date models. also assume maximum delay required make model identifiable. set 40 days due evidence long reporting delays example data note cases majority right censoring occurs first days increasing maximum delay non-linear effect run-time (.e 20 day delay much faster fit model 40 day delay). Note also current formulation delays longer maximum ignored adjusted estimate really data reported maximum delay rather finally reported data. Another key modelling choice make stage model overall hospitalisations jointly age groups rather aggregation age group estimates. implicitly assumes aggregated non-aggregated data comparable (may may case) reporting process shares mechanisms. Another way approach model age stratified hospitalisations aggregate nowcast estimates total counts fitting model.","code":"pobs <- enw_preprocess_data(retro_nat_germany, max_delay = 40, by = \"age_group\") pobs #>                     obs          new_confirm              latest                 diff   reporting_triangle #> 1: <data.table[6020x6]> <data.table[6020x8]> <data.table[287x5]> <data.table[6020x8]> <data.table[287x42]> #>          metareference          metareport time snapshots groups max_delay   max_date #> 1: <data.table[287x7]> <data.table[560x8]>   41       287      7        40 2021-09-01"},{"path":"epiforecasts.io/epinowcast/articles/germany-age-stratified-nowcasting.html","id":"models","dir":"Articles","previous_headings":"","what":"Models","title":"Hierarchical nowcasting of age stratified COVID-19 hospitalisations in Germany","text":"explore range increasingly complex models using subject area knowledge posterior predictive checks motivate modelling choices.","code":""},{"path":"epiforecasts.io/epinowcast/articles/germany-age-stratified-nowcasting.html","id":"shared-reporting-delay-distribution","dir":"Articles","previous_headings":"Models","what":"Shared reporting delay distribution","title":"Hierarchical nowcasting of age stratified COVID-19 hospitalisations in Germany","text":"first explore relatively simple model assumes reporting delays fixed across age groups time. model default simply call epinowcast. want make use CmdStan’s support -chain parallisation first compile default model enabled (also need pass threads_per_chain epinowcast). Note use two chains using 2 threads demonstration general using 4 chains recommended. Also note silenced fitting progress potential warning messages general done. first visualise observations available model, nowcast final reported hospitalisations actual reported observations.  order identify areas current model poorly reproducing data plot posterior predictions data. plot faceted age group reference data y axis showing number observations reported given day given reference day x axis showing report date. see fairly clearly oscillations reported cases every 7 days expressed plot oscillations facet appear move left right across facets. indicates kind week day adjustment may needed.","code":"multithread_model <- enw_model(threads = TRUE) options(mc.cores = 2) nowcast <- epinowcast(pobs,   model = multithread_model,   save_warmup = FALSE,   output_loglik = TRUE, pp = TRUE,   chains = 2, threads_per_chain = threads,   show_messages = FALSE, refresh = 0 ) #> Running MCMC with 2 parallel chains, with 2 thread(s) per chain... #>  #> Chain 2 finished in 332.1 seconds. #> Chain 1 finished in 340.1 seconds. #>  #> Both chains finished successfully. #> Mean chain execution time: 336.1 seconds. #> Total execution time: 340.0 seconds. plot(nowcast, latest_obs = latest_nat_germany) +   facet_wrap(vars(age_group), scales = \"free_y\") plot(nowcast, type = \"posterior\") +   facet_wrap(vars(age_group, reference_date), scales = \"free\")"},{"path":"epiforecasts.io/epinowcast/articles/germany-age-stratified-nowcasting.html","id":"reporting-day-of-the-week-effect","dir":"Articles","previous_headings":"Models","what":"Reporting day of the week effect","title":"Hierarchical nowcasting of age stratified COVID-19 hospitalisations in Germany","text":"noted using posterior predictions simple model fit appears day week effect reported observations. adjust introduce random effect day week date report using following helper function uses metadata produced enw_preprocess_data(). Note epinowcast uses sparse design matrix reduce runtimes design matrix shows unique rows index containing mapping full design matrix. speed model fitting make use posterior information previous model (inflation) parameters. Note truly Bayesian approach situations may problematic. now repeat nowcasting step day week reporting model included. Nowcast performance looks visually improved notable variation across age groups 35-59 year old nowcast appearing quite poor (result aggregate nowcast also showing great performance). also plot posterior predictions model way previous model.","code":"dow_report_effects <- enw_formula(pobs$metareport, random = \"day_of_week\") dow_report_effects #> $fixed #> $fixed$formula #> ~1 + day_of_week #> <environment: 0x7c0952e0> #>  #> $fixed$design #>   (Intercept) day_of_weekFriday day_of_weekMonday day_of_weekSaturday day_of_weekSunday day_of_weekThursday #> 1           1                 1                 0                   0                 0                   0 #> 2           1                 0                 0                   1                 0                   0 #> 3           1                 0                 0                   0                 1                   0 #> 4           1                 0                 1                   0                 0                   0 #> 5           1                 0                 0                   0                 0                   0 #> 6           1                 0                 0                   0                 0                   0 #> 7           1                 0                 0                   0                 0                   1 #>   day_of_weekTuesday day_of_weekWednesday #> 1                  0                    0 #> 2                  0                    0 #> 3                  0                    0 #> 4                  0                    0 #> 5                  1                    0 #> 6                  0                    1 #> 7                  0                    0 #>  #> $fixed$index #>   [1] 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 #>  [60] 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 #> [119] 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 #> [178] 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 #> [237] 7 1 2 3 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 #> [296] 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 #> [355] 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 1 2 3 4 5 6 7 1 2 3 4 5 6 #> [414] 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 #> [473] 3 4 5 6 7 1 2 3 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 #> [532] 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 #>  #>  #> $random #> $random$formula #> ~0 + fixed + day_of_week #> <environment: 0x7c0952e0> #>  #> $random$design #>   fixed day_of_week #> 1     0           1 #> 2     0           1 #> 3     0           1 #> 4     0           1 #> 5     0           1 #> 6     0           1 #> 7     0           1 #> attr(,\"assign\") #> [1] 1 2 #>  #> $random$index #> [1] 1 2 3 4 5 6 7 priors <- enw_posterior_as_prior(   nowcast, variables = c(\"logmean_int\", \"logsd_int\", \"sqrt_phi\"), scale = 5 ) priors #>       variable                                             description          distribution      mean         sd #> 1:    eobs_lsd      Standard deviation for expected final observations Zero truncated normal 0.0000000 1.00000000 #> 2:  logmean_sd     Standard deviation of scaled pooled logmean effects Zero truncated normal 0.0000000 1.00000000 #> 3:    logsd_sd       Standard deviation of scaled pooled logsd effects Zero truncated normal 0.0000000 1.00000000 #> 4:   rd_eff_sd Standard deviation of scaled pooled report date effects Zero truncated normal 0.0000000 1.00000000 #> 5: logmean_int                                                    <NA>                  <NA> 1.1202407 0.21394124 #> 6:   logsd_int                                                    <NA>                  <NA> 1.7294194 0.23758009 #> 7:    sqrt_phi                                                    <NA>                  <NA> 0.1272773 0.08008094 options(mc.cores = 2) dow_nowcast <- epinowcast(pobs,   model = multithread_model,   report_effects = dow_report_effects,   priors = priors,   save_warmup = FALSE,   output_loglik = TRUE, pp = TRUE,   chains = 2, threads_per_chain = threads,   show_messages = FALSE, refresh = 0 ) #> Running MCMC with 2 parallel chains, with 2 thread(s) per chain... #>  #> Chain 1 finished in 672.2 seconds. #> Chain 2 finished in 683.1 seconds. #>  #> Both chains finished successfully. #> Mean chain execution time: 677.7 seconds. #> Total execution time: 683.1 seconds. plot(dow_nowcast, latest_obs = latest_nat_germany) +   facet_wrap(vars(age_group), scales = \"free_y\")"},{"path":"epiforecasts.io/epinowcast/articles/germany-age-stratified-nowcasting.html","id":"age-group-variation","dir":"Articles","previous_headings":"Models","what":"Age group variation","title":"Hierarchical nowcasting of age stratified COVID-19 hospitalisations in Germany","text":"quite likely variation reporting delay age may driving variation nowcast performance noted last model. model using random effect 5 year age group (groups supplied data). nowcast time using age adjusted reference date model day week adjusted report date model. Fit looks slightly better adjustment though uncertainty also increased age groups performance final day data may reduced compared first model.","code":"age_reference_effects <- enw_formula(   pobs$metareference,   random = \"age_group\" ) age_reference_effects #> $fixed #> $fixed$formula #> ~1 + age_group #> <environment: 0x5d7eb908> #>  #> $fixed$design #>     (Intercept) age_group00-04 age_group00+ age_group05-14 age_group15-34 age_group35-59 age_group60-79 age_group80+ #> 1             1              1            0              0              0              0              0            0 #> 42            1              0            1              0              0              0              0            0 #> 83            1              0            0              1              0              0              0            0 #> 124           1              0            0              0              1              0              0            0 #> 165           1              0            0              0              0              1              0            0 #> 206           1              0            0              0              0              0              1            0 #> 247           1              0            0              0              0              0              0            1 #>  #> $fixed$index #>   [1] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 #>  [60] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 #> [119] 3 3 3 3 3 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 5 5 5 5 5 5 5 5 5 5 5 5 5 #> [178] 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 #> [237] 6 6 6 6 6 6 6 6 6 6 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 #>  #>  #> $random #> $random$formula #> ~0 + fixed + age_group #> <environment: 0x5d7eb908> #>  #> $random$design #>   fixed age_group #> 1     0         1 #> 2     0         1 #> 3     0         1 #> 4     0         1 #> 5     0         1 #> 6     0         1 #> 7     0         1 #> attr(,\"assign\") #> [1] 1 2 #>  #> $random$index #> [1] 1 2 3 4 5 6 7 options(mc.cores = 2) age_nowcast <- epinowcast(pobs,   model = multithread_model,   reference_effects = age_reference_effects,   report_effects = dow_report_effects,   priors = priors,   save_warmup = FALSE,   output_loglik = TRUE, pp = TRUE,   chains = 2, threads_per_chain = threads,   show_messages = FALSE, refresh = 0 ) #> Running MCMC with 2 parallel chains, with 2 thread(s) per chain... #>  #> Chain 1 finished in 791.8 seconds. #> Chain 2 finished in 794.3 seconds. #>  #> Both chains finished successfully. #> Mean chain execution time: 793.0 seconds. #> Total execution time: 794.1 seconds. plot(age_nowcast, latest_obs = latest_nat_germany) +   facet_wrap(vars(age_group), scales = \"free_y\")"},{"path":"epiforecasts.io/epinowcast/articles/germany-age-stratified-nowcasting.html","id":"variation-based-on-reference-date","dir":"Articles","previous_headings":"Models","what":"Variation based on reference date","title":"Hierarchical nowcasting of age stratified COVID-19 hospitalisations in Germany","text":"case reporting delays change time well across age groups. One way modelling assume piecewise constant variation time modelled first order weekly random walk. attractive property approach limits number report date distributions need evaluated model number weeks data expensive computational step using approach introducing time-varying parameter limits additional computational overhead. define reference date model first need create new features metadata capture order weeks occur . can now define model formula previously time making use custom_random argument also creates random effect time using partial matching without creating new features automatically. fit nowcasting model, comparison previous model looks like introduction variation time introduce slight improvement capturing hospitalisations age groups.","code":"metareference <- enw_add_cumulative_membership(   pobs$metareference[[1]],   feature = \"week\" ) metareference #>      age_group       date location group day_of_week week month cweek1 cweek2 cweek3 cweek4 cweek5 #>   1:     00-04 2021-07-23       DE     2      Friday    0     0      0      0      0      0      0 #>   2:     00-04 2021-07-24       DE     2    Saturday    0     0      0      0      0      0      0 #>   3:     00-04 2021-07-25       DE     2      Sunday    0     0      0      0      0      0      0 #>   4:     00-04 2021-07-26       DE     2      Monday    0     0      0      0      0      0      0 #>   5:     00-04 2021-07-27       DE     2     Tuesday    0     0      0      0      0      0      0 #>  ---                                                                                               #> 283:       80+ 2021-08-28       DE     7    Saturday    5     1      1      1      1      1      1 #> 284:       80+ 2021-08-29       DE     7      Sunday    5     1      1      1      1      1      1 #> 285:       80+ 2021-08-30       DE     7      Monday    5     1      1      1      1      1      1 #> 286:       80+ 2021-08-31       DE     7     Tuesday    5     1      1      1      1      1      1 #> 287:       80+ 2021-09-01       DE     7   Wednesday    5     2      1      1      1      1      1 week_age_reference_effects <- enw_formula(   metareference,   random = \"age_group\", custom_random = \"cweek\" ) week_age_reference_effects #> $fixed #> $fixed$formula #> ~1 + age_group + cweek1 + cweek2 + cweek3 + cweek4 + cweek5 #> <environment: 0x5e6bff88> #>  #> $fixed$design #>     (Intercept) age_group00-04 age_group00+ age_group05-14 age_group15-34 age_group35-59 age_group60-79 age_group80+ #> 1             1              1            0              0              0              0              0            0 #> 8             1              1            0              0              0              0              0            0 #> 15            1              1            0              0              0              0              0            0 #> 22            1              1            0              0              0              0              0            0 #> 29            1              1            0              0              0              0              0            0 #> 36            1              1            0              0              0              0              0            0 #> 42            1              0            1              0              0              0              0            0 #> 49            1              0            1              0              0              0              0            0 #> 56            1              0            1              0              0              0              0            0 #> 63            1              0            1              0              0              0              0            0 #> 70            1              0            1              0              0              0              0            0 #> 77            1              0            1              0              0              0              0            0 #> 83            1              0            0              1              0              0              0            0 #> 90            1              0            0              1              0              0              0            0 #> 97            1              0            0              1              0              0              0            0 #> 104           1              0            0              1              0              0              0            0 #> 111           1              0            0              1              0              0              0            0 #> 118           1              0            0              1              0              0              0            0 #> 124           1              0            0              0              1              0              0            0 #> 131           1              0            0              0              1              0              0            0 #> 138           1              0            0              0              1              0              0            0 #> 145           1              0            0              0              1              0              0            0 #> 152           1              0            0              0              1              0              0            0 #> 159           1              0            0              0              1              0              0            0 #> 165           1              0            0              0              0              1              0            0 #> 172           1              0            0              0              0              1              0            0 #> 179           1              0            0              0              0              1              0            0 #> 186           1              0            0              0              0              1              0            0 #> 193           1              0            0              0              0              1              0            0 #> 200           1              0            0              0              0              1              0            0 #> 206           1              0            0              0              0              0              1            0 #> 213           1              0            0              0              0              0              1            0 #> 220           1              0            0              0              0              0              1            0 #> 227           1              0            0              0              0              0              1            0 #> 234           1              0            0              0              0              0              1            0 #> 241           1              0            0              0              0              0              1            0 #> 247           1              0            0              0              0              0              0            1 #> 254           1              0            0              0              0              0              0            1 #> 261           1              0            0              0              0              0              0            1 #> 268           1              0            0              0              0              0              0            1 #> 275           1              0            0              0              0              0              0            1 #> 282           1              0            0              0              0              0              0            1 #>     cweek1 cweek2 cweek3 cweek4 cweek5 #> 1        0      0      0      0      0 #> 8        1      0      0      0      0 #> 15       1      1      0      0      0 #> 22       1      1      1      0      0 #> 29       1      1      1      1      0 #> 36       1      1      1      1      1 #> 42       0      0      0      0      0 #> 49       1      0      0      0      0 #> 56       1      1      0      0      0 #> 63       1      1      1      0      0 #> 70       1      1      1      1      0 #> 77       1      1      1      1      1 #> 83       0      0      0      0      0 #> 90       1      0      0      0      0 #> 97       1      1      0      0      0 #> 104      1      1      1      0      0 #> 111      1      1      1      1      0 #> 118      1      1      1      1      1 #> 124      0      0      0      0      0 #> 131      1      0      0      0      0 #> 138      1      1      0      0      0 #> 145      1      1      1      0      0 #> 152      1      1      1      1      0 #> 159      1      1      1      1      1 #> 165      0      0      0      0      0 #> 172      1      0      0      0      0 #> 179      1      1      0      0      0 #> 186      1      1      1      0      0 #> 193      1      1      1      1      0 #> 200      1      1      1      1      1 #> 206      0      0      0      0      0 #> 213      1      0      0      0      0 #> 220      1      1      0      0      0 #> 227      1      1      1      0      0 #> 234      1      1      1      1      0 #> 241      1      1      1      1      1 #> 247      0      0      0      0      0 #> 254      1      0      0      0      0 #> 261      1      1      0      0      0 #> 268      1      1      1      0      0 #> 275      1      1      1      1      0 #> 282      1      1      1      1      1 #>  #> $fixed$index #>   [1]  1  1  1  1  1  1  1  2  2  2  2  2  2  2  3  3  3  3  3  3  3  4  4  4  4  4  4  4  5  5  5  5  5  5  5  6  6  6  6 #>  [40]  6  6  7  7  7  7  7  7  7  8  8  8  8  8  8  8  9  9  9  9  9  9  9 10 10 10 10 10 10 10 11 11 11 11 11 11 11 12 12 #>  [79] 12 12 12 12 13 13 13 13 13 13 13 14 14 14 14 14 14 14 15 15 15 15 15 15 15 16 16 16 16 16 16 16 17 17 17 17 17 17 17 #> [118] 18 18 18 18 18 18 19 19 19 19 19 19 19 20 20 20 20 20 20 20 21 21 21 21 21 21 21 22 22 22 22 22 22 22 23 23 23 23 23 #> [157] 23 23 24 24 24 24 24 24 25 25 25 25 25 25 25 26 26 26 26 26 26 26 27 27 27 27 27 27 27 28 28 28 28 28 28 28 29 29 29 #> [196] 29 29 29 29 30 30 30 30 30 30 31 31 31 31 31 31 31 32 32 32 32 32 32 32 33 33 33 33 33 33 33 34 34 34 34 34 34 34 35 #> [235] 35 35 35 35 35 35 36 36 36 36 36 36 37 37 37 37 37 37 37 38 38 38 38 38 38 38 39 39 39 39 39 39 39 40 40 40 40 40 40 #> [274] 40 41 41 41 41 41 41 41 42 42 42 42 42 42 #>  #>  #> $random #> $random$formula #> ~0 + fixed + age_group + cweek #> <environment: 0x5e6bff88> #>  #> $random$design #>    fixed age_group cweek #> 1      0         1     0 #> 2      0         1     0 #> 3      0         1     0 #> 4      0         1     0 #> 5      0         1     0 #> 6      0         1     0 #> 7      0         1     0 #> 8      0         0     1 #> 9      0         0     1 #> 10     0         0     1 #> 11     0         0     1 #> 12     0         0     1 #> attr(,\"assign\") #> [1] 1 2 3 #>  #> $random$index #>  [1]  1  2  3  4  5  6  7  8  9 10 11 12 options(mc.cores = 2) week_nowcast <- epinowcast(pobs,   model = multithread_model,   reference_effects = week_age_reference_effects,   report_effects = dow_report_effects,   priors = priors,   save_warmup = FALSE,   output_loglik = TRUE, pp = TRUE,   chains = 2, threads_per_chain = threads,   show_messages = FALSE, refresh = 0 ) #> Running MCMC with 2 parallel chains, with 2 thread(s) per chain... #>  #> Chain 1 finished in 1323.2 seconds. #> Chain 2 finished in 1335.7 seconds. #>  #> Both chains finished successfully. #> Mean chain execution time: 1329.4 seconds. #> Total execution time: 1335.1 seconds. plot(week_nowcast, latest_obs = latest_nat_germany) +   facet_wrap(vars(age_group), scales = \"free_y\")"},{"path":"epiforecasts.io/epinowcast/articles/germany-age-stratified-nowcasting.html","id":"variation-based-on-reference-date-stratified-by-age","dir":"Articles","previous_headings":"Models","what":"Variation based on reference date stratified by age","title":"Hierarchical nowcasting of age stratified COVID-19 hospitalisations in Germany","text":"final hierarchical model makes sense explore whether evidence reporting delays vary week age group jointly. scenario assumption delays may evolve differently time age group reporting effects measurement error still shared across data sets. Models level flexibility currently supported enw_formula() (PR improving interface welcome) need interact lower level package functionality specify . first define fixed effects formula followed design matrix (note printed first 10 columns rows sparse design matrix save space). now need design random effects interact design matrix. first step extract fixed effects. can start building shared pooling standard deviations parameters global random walk age groups random walk residuals age group. Now can create pooling standard deviation design matrix create list describing model. can now fit model (note model quite complex may take time fit increase adapt_delta setting 0.95 mitigate divergent transitions). comparison previous model looks like introduction variation time introduce slight improvement capturing hospitalisations age groups.","code":"fixed_form <- as.formula(paste0(   \"~ 1 + age_group + \",   paste(paste0(     \"age_group:\",     grep(\"cweek\", colnames(metareference), value = TRUE),         collapse = \" + \")),   \" + \",   paste(grep(\"cweek\", colnames(metareference), value = TRUE),         collapse = \" + \") )) fixed <- enw_design(fixed_form, metareference, no_contrasts = TRUE,                     sparse = TRUE) fixed$formula #> ~1 + age_group + age_group:cweek1 + age_group:cweek2 + age_group:cweek3 +  #>     age_group:cweek4 + age_group:cweek5 + cweek1 + cweek2 + cweek3 +  #>     cweek4 + cweek5 fixed$design[1:10, 1:10] #>    (Intercept) age_group00-04 age_group00+ age_group05-14 age_group15-34 age_group35-59 age_group60-79 age_group80+ cweek1 #> 1            1              1            0              0              0              0              0            0      0 #> 8            1              1            0              0              0              0              0            0      1 #> 15           1              1            0              0              0              0              0            0      1 #> 22           1              1            0              0              0              0              0            0      1 #> 29           1              1            0              0              0              0              0            0      1 #> 36           1              1            0              0              0              0              0            0      1 #> 42           1              0            1              0              0              0              0            0      0 #> 49           1              0            1              0              0              0              0            0      1 #> 56           1              0            1              0              0              0              0            0      1 #> 63           1              0            1              0              0              0              0            0      1 #>    cweek2 #> 1       0 #> 8       0 #> 15      1 #> 22      1 #> 29      1 #> 36      1 #> 42      0 #> 49      0 #> 56      1 #> 63      1 effects <- enw_effects_metadata(fixed$design) effects #>                   effects fixed #>  1:        age_group00-04     1 #>  2:          age_group00+     1 #>  3:        age_group05-14     1 #>  4:        age_group15-34     1 #>  5:        age_group35-59     1 #>  6:        age_group60-79     1 #>  7:          age_group80+     1 #>  8:                cweek1     1 #>  9:                cweek2     1 #> 10:                cweek3     1 #> 11:                cweek4     1 #> 12:                cweek5     1 #> 13: age_group00-04:cweek1     1 #> 14:   age_group00+:cweek1     1 #> 15: age_group05-14:cweek1     1 #> 16: age_group15-34:cweek1     1 #> 17: age_group35-59:cweek1     1 #> 18: age_group60-79:cweek1     1 #> 19:   age_group80+:cweek1     1 #> 20: age_group00-04:cweek2     1 #> 21:   age_group00+:cweek2     1 #> 22: age_group05-14:cweek2     1 #> 23: age_group15-34:cweek2     1 #> 24: age_group35-59:cweek2     1 #> 25: age_group60-79:cweek2     1 #> 26:   age_group80+:cweek2     1 #> 27: age_group00-04:cweek3     1 #> 28:   age_group00+:cweek3     1 #> 29: age_group05-14:cweek3     1 #> 30: age_group15-34:cweek3     1 #> 31: age_group35-59:cweek3     1 #> 32: age_group60-79:cweek3     1 #> 33:   age_group80+:cweek3     1 #> 34: age_group00-04:cweek4     1 #> 35:   age_group00+:cweek4     1 #> 36: age_group05-14:cweek4     1 #> 37: age_group15-34:cweek4     1 #> 38: age_group35-59:cweek4     1 #> 39: age_group60-79:cweek4     1 #> 40:   age_group80+:cweek4     1 #> 41: age_group00-04:cweek5     1 #> 42:   age_group00+:cweek5     1 #> 43: age_group05-14:cweek5     1 #> 44: age_group15-34:cweek5     1 #> 45: age_group35-59:cweek5     1 #> 46: age_group60-79:cweek5     1 #> 47:   age_group80+:cweek5     1 #>                   effects fixed effects <- enw_add_pooling_effect(effects, \"cweek\", \"cweek\") effects <- enw_add_pooling_effect(effects, \"age_group\", \"age_group\") for (i in  unique(metareference$age_group)) {   effects <- enw_add_pooling_effect(     effects, c(\"cweek\", paste0(\"age_group\", i)), paste0( i, \"_walk\"),       finder_fn = function(effect, pattern) {         grepl(pattern[1], effect) & startsWith(effect, pattern[2])     }) } effects[grepl(\":\", effects), age_group := 0] effects #>                   effects fixed cweek age_group 00-04_walk 00+_walk 05-14_walk 15-34_walk 35-59_walk 60-79_walk 80+_walk #>  1:        age_group00-04     0     0         1          0        0          0          0          0          0        0 #>  2:          age_group00+     0     0         1          0        0          0          0          0          0        0 #>  3:        age_group05-14     0     0         1          0        0          0          0          0          0        0 #>  4:        age_group15-34     0     0         1          0        0          0          0          0          0        0 #>  5:        age_group35-59     0     0         1          0        0          0          0          0          0        0 #>  6:        age_group60-79     0     0         1          0        0          0          0          0          0        0 #>  7:          age_group80+     0     0         1          0        0          0          0          0          0        0 #>  8:                cweek1     0     1         0          0        0          0          0          0          0        0 #>  9:                cweek2     0     1         0          0        0          0          0          0          0        0 #> 10:                cweek3     0     1         0          0        0          0          0          0          0        0 #> 11:                cweek4     0     1         0          0        0          0          0          0          0        0 #> 12:                cweek5     0     1         0          0        0          0          0          0          0        0 #> 13: age_group00-04:cweek1     0     0         0          1        0          0          0          0          0        0 #> 14:   age_group00+:cweek1     0     0         0          0        1          0          0          0          0        0 #> 15: age_group05-14:cweek1     0     0         0          0        0          1          0          0          0        0 #> 16: age_group15-34:cweek1     0     0         0          0        0          0          1          0          0        0 #> 17: age_group35-59:cweek1     0     0         0          0        0          0          0          1          0        0 #> 18: age_group60-79:cweek1     0     0         0          0        0          0          0          0          1        0 #> 19:   age_group80+:cweek1     0     0         0          0        0          0          0          0          0        1 #> 20: age_group00-04:cweek2     0     0         0          1        0          0          0          0          0        0 #> 21:   age_group00+:cweek2     0     0         0          0        1          0          0          0          0        0 #> 22: age_group05-14:cweek2     0     0         0          0        0          1          0          0          0        0 #> 23: age_group15-34:cweek2     0     0         0          0        0          0          1          0          0        0 #> 24: age_group35-59:cweek2     0     0         0          0        0          0          0          1          0        0 #> 25: age_group60-79:cweek2     0     0         0          0        0          0          0          0          1        0 #> 26:   age_group80+:cweek2     0     0         0          0        0          0          0          0          0        1 #> 27: age_group00-04:cweek3     0     0         0          1        0          0          0          0          0        0 #> 28:   age_group00+:cweek3     0     0         0          0        1          0          0          0          0        0 #> 29: age_group05-14:cweek3     0     0         0          0        0          1          0          0          0        0 #> 30: age_group15-34:cweek3     0     0         0          0        0          0          1          0          0        0 #> 31: age_group35-59:cweek3     0     0         0          0        0          0          0          1          0        0 #> 32: age_group60-79:cweek3     0     0         0          0        0          0          0          0          1        0 #> 33:   age_group80+:cweek3     0     0         0          0        0          0          0          0          0        1 #> 34: age_group00-04:cweek4     0     0         0          1        0          0          0          0          0        0 #> 35:   age_group00+:cweek4     0     0         0          0        1          0          0          0          0        0 #> 36: age_group05-14:cweek4     0     0         0          0        0          1          0          0          0        0 #> 37: age_group15-34:cweek4     0     0         0          0        0          0          1          0          0        0 #> 38: age_group35-59:cweek4     0     0         0          0        0          0          0          1          0        0 #> 39: age_group60-79:cweek4     0     0         0          0        0          0          0          0          1        0 #> 40:   age_group80+:cweek4     0     0         0          0        0          0          0          0          0        1 #> 41: age_group00-04:cweek5     0     0         0          1        0          0          0          0          0        0 #> 42:   age_group00+:cweek5     0     0         0          0        1          0          0          0          0        0 #> 43: age_group05-14:cweek5     0     0         0          0        0          1          0          0          0        0 #> 44: age_group15-34:cweek5     0     0         0          0        0          0          1          0          0        0 #> 45: age_group35-59:cweek5     0     0         0          0        0          0          0          1          0        0 #> 46: age_group60-79:cweek5     0     0         0          0        0          0          0          0          1        0 #> 47:   age_group80+:cweek5     0     0         0          0        0          0          0          0          0        1 #>                   effects fixed cweek age_group 00-04_walk 00+_walk 05-14_walk 15-34_walk 35-59_walk 60-79_walk 80+_walk form <- as.formula(   paste0(\"~ 0 + fixed + cweek + age_group + \",          paste(paste0(\"`\", unique(metareference$age_group), \"_walk`\"),                collapse = \" + \") )) random <- enw_design(form, effects, sparse = FALSE) random #> $formula #> ~0 + fixed + cweek + age_group + `00-04_walk` + `00+_walk` +  #>     `05-14_walk` + `15-34_walk` + `35-59_walk` + `60-79_walk` +  #>     `80+_walk` #>  #> $design #>    fixed cweek age_group `00-04_walk` `00+_walk` `05-14_walk` `15-34_walk` `35-59_walk` `60-79_walk` `80+_walk` #> 1      0     0         1            0          0            0            0            0            0          0 #> 2      0     0         1            0          0            0            0            0            0          0 #> 3      0     0         1            0          0            0            0            0            0          0 #> 4      0     0         1            0          0            0            0            0            0          0 #> 5      0     0         1            0          0            0            0            0            0          0 #> 6      0     0         1            0          0            0            0            0            0          0 #> 7      0     0         1            0          0            0            0            0            0          0 #> 8      0     1         0            0          0            0            0            0            0          0 #> 9      0     1         0            0          0            0            0            0            0          0 #> 10     0     1         0            0          0            0            0            0            0          0 #> 11     0     1         0            0          0            0            0            0            0          0 #> 12     0     1         0            0          0            0            0            0            0          0 #> 13     0     0         0            1          0            0            0            0            0          0 #> 14     0     0         0            0          1            0            0            0            0          0 #> 15     0     0         0            0          0            1            0            0            0          0 #> 16     0     0         0            0          0            0            1            0            0          0 #> 17     0     0         0            0          0            0            0            1            0          0 #> 18     0     0         0            0          0            0            0            0            1          0 #> 19     0     0         0            0          0            0            0            0            0          1 #> 20     0     0         0            1          0            0            0            0            0          0 #> 21     0     0         0            0          1            0            0            0            0          0 #> 22     0     0         0            0          0            1            0            0            0          0 #> 23     0     0         0            0          0            0            1            0            0          0 #> 24     0     0         0            0          0            0            0            1            0          0 #> 25     0     0         0            0          0            0            0            0            1          0 #> 26     0     0         0            0          0            0            0            0            0          1 #> 27     0     0         0            1          0            0            0            0            0          0 #> 28     0     0         0            0          1            0            0            0            0          0 #> 29     0     0         0            0          0            1            0            0            0          0 #> 30     0     0         0            0          0            0            1            0            0          0 #> 31     0     0         0            0          0            0            0            1            0          0 #> 32     0     0         0            0          0            0            0            0            1          0 #> 33     0     0         0            0          0            0            0            0            0          1 #> 34     0     0         0            1          0            0            0            0            0          0 #> 35     0     0         0            0          1            0            0            0            0          0 #> 36     0     0         0            0          0            1            0            0            0          0 #> 37     0     0         0            0          0            0            1            0            0          0 #> 38     0     0         0            0          0            0            0            1            0          0 #> 39     0     0         0            0          0            0            0            0            1          0 #> 40     0     0         0            0          0            0            0            0            0          1 #> 41     0     0         0            1          0            0            0            0            0          0 #> 42     0     0         0            0          1            0            0            0            0          0 #> 43     0     0         0            0          0            1            0            0            0          0 #> 44     0     0         0            0          0            0            1            0            0          0 #> 45     0     0         0            0          0            0            0            1            0          0 #> 46     0     0         0            0          0            0            0            0            1          0 #> 47     0     0         0            0          0            0            0            0            0          1 #> attr(,\"assign\") #>  [1]  1  2  3  4  5  6  7  8  9 10 #>  #> $index #>  [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 #> [42] 42 43 44 45 46 47 custom_reference_effects <- list(fixed = fixed, random = random) options(mc.cores = 2) age_week_nowcast <- epinowcast(pobs,   model = multithread_model,   reference_effects = custom_reference_effects,   report_effects = dow_report_effects,   priors = priors,   save_warmup = FALSE,   output_loglik = TRUE, pp = TRUE,   chains = 2, threads_per_chain = threads,   adapt_delta = 0.95,   show_messages = FALSE, refresh = 0 ) #> Running MCMC with 2 parallel chains, with 2 thread(s) per chain... #>  #> Chain 2 finished in 1771.2 seconds. #> Chain 1 finished in 1786.3 seconds. #>  #> Both chains finished successfully. #> Mean chain execution time: 1778.7 seconds. #> Total execution time: 1785.3 seconds. plot(age_week_nowcast, latest_obs = latest_nat_germany) +   facet_wrap(vars(age_group), scales = \"free_y\")"},{"path":"epiforecasts.io/epinowcast/articles/germany-age-stratified-nowcasting.html","id":"independent-models-for-each-age-group-","dir":"Articles","previous_headings":"Models","what":"Independent models for each age group.","title":"Hierarchical nowcasting of age stratified COVID-19 hospitalisations in Germany","text":"obvious question ask stage using model jointly fits age groups actually beneficial. explore fitting model previously (day week effect report date random walk week occurrence date stratified age) age group independently. define model single call epinowcast fitting dataset independently joint setting likely lead long fit times real benefit. Instead write small helper function preprocess input data, define report reference date models run nowcast. can now use wrapper function data available age group, summarise resulting nowcast, join single data frame. now summarised nowcasts rather object class epinowcast need make use underlying plot function . see performance generally quite good across board though width credible intervals also increased. Importantly 35-59 year old age group captured least well heirarchical models minor reductions performance age groups. suggests dataset nowcast date may relatively little benefit jointly modelling age groups.","code":"independent_epinowcast <- function(obs, max_delay = 40, ...) {   pobs_ind <- enw_preprocess_data(obs, max_delay = max_delay)    metareference <- enw_add_cumulative_membership(     pobs_ind$metareference[[1]],     feature = \"week\"   )    reference_effects <- enw_formula(metareference, custom_random = \"cweek\")   report_effects <- enw_formula(pobs_ind$metareport, random = \"day_of_week\")    nowcast <- epinowcast(     pobs_ind,     reference_effects = reference_effects,     report_effects = report_effects,      ...)    nowcast_summary <- summary(     nowcast,     probs = c(0.025, 0.05, seq(0.1, 0.9, by = 0.1), 0.95, 0.975)   )   return(nowcast_summary) } options(mc.cores = 2)  independent_nowcast <- map(   split(retro_nat_germany, by = \"age_group\"),   independent_epinowcast,   model = multithread_model,   priors = priors,   save_warmup = FALSE,   output_loglik = TRUE, pp = TRUE,   chains = 2, threads_per_chain = threads,   show_messages = FALSE, refresh = 0 ) #> Running MCMC with 2 parallel chains, with 2 thread(s) per chain... #>  #> Chain 1 finished in 119.9 seconds. #> Chain 2 finished in 139.0 seconds. #>  #> Both chains finished successfully. #> Mean chain execution time: 129.5 seconds. #> Total execution time: 139.1 seconds. #> Running MCMC with 2 parallel chains, with 2 thread(s) per chain... #>  #> Chain 1 finished in 47.3 seconds. #> Chain 2 finished in 47.9 seconds. #>  #> Both chains finished successfully. #> Mean chain execution time: 47.6 seconds. #> Total execution time: 48.1 seconds. #> Running MCMC with 2 parallel chains, with 2 thread(s) per chain... #>  #> Chain 1 finished in 44.6 seconds. #> Chain 2 finished in 48.1 seconds. #>  #> Both chains finished successfully. #> Mean chain execution time: 46.4 seconds. #> Total execution time: 48.2 seconds. #> Running MCMC with 2 parallel chains, with 2 thread(s) per chain... #>  #> Chain 2 finished in 93.5 seconds. #> Chain 1 finished in 96.6 seconds. #>  #> Both chains finished successfully. #> Mean chain execution time: 95.1 seconds. #> Total execution time: 96.7 seconds. #> Running MCMC with 2 parallel chains, with 2 thread(s) per chain... #>  #> Chain 1 finished in 106.2 seconds. #> Chain 2 finished in 119.6 seconds. #>  #> Both chains finished successfully. #> Mean chain execution time: 112.9 seconds. #> Total execution time: 119.8 seconds. #> Running MCMC with 2 parallel chains, with 2 thread(s) per chain... #>  #> Chain 2 finished in 90.0 seconds. #> Chain 1 finished in 95.9 seconds. #>  #> Both chains finished successfully. #> Mean chain execution time: 92.9 seconds. #> Total execution time: 95.9 seconds. #> Running MCMC with 2 parallel chains, with 2 thread(s) per chain... #>  #> Chain 2 finished in 89.4 seconds. #> Chain 1 finished in 92.7 seconds. #>  #> Both chains finished successfully. #> Mean chain execution time: 91.1 seconds. #> Total execution time: 92.8 seconds. independent_nowcast <- rbindlist(independent_nowcast) enw_plot_nowcast_quantiles(   independent_nowcast, latest_obs = latest_nat_germany) +   facet_wrap(vars(age_group), scales = \"free_y\")"},{"path":"epiforecasts.io/epinowcast/articles/germany-age-stratified-nowcasting.html","id":"alternative-models","dir":"Articles","previous_headings":"Models","what":"Alternative models","title":"Hierarchical nowcasting of age stratified COVID-19 hospitalisations in Germany","text":"models defined assumed delay distribution, aside report day effects, parametric lognormal distribution. assumptions may less optimal. Alternatives include assuming different distributional form (gamma distribution also supported epinowcast) assuming report delay fully non-parametric yet supported future package versions. number additional models explore within framework supported epinowcast well large number alternative parameterisations yet supported. example, explore models complex reporting day effects, including holidays (supported epinowcast either separate effect assuming reporting hazard Sundays) variation time represent reporting delays changing independently reference date (similar time varying model defined effect occurring report date model rather reference date model). choices data dependent domain knowledge needs used assess likely censoring mechanisms. interested expanding functionality underlying model address issues note epinowcast allows users pass models meaning alternative parameterisations, example altering forecast model used inferring expected observations, may easily tested within package infrastructure. testing done alterations increase flexibility package model improves defaults welcome pull requests.","code":""},{"path":"epiforecasts.io/epinowcast/articles/germany-age-stratified-nowcasting.html","id":"evaluation","dir":"Articles","previous_headings":"","what":"Evaluation","title":"Hierarchical nowcasting of age stratified COVID-19 hospitalisations in Germany","text":"nowcast single date, visualised performance went, evaluation anything complete rigorous can give examples might evaluate performance generally potentially draw useful initial conclusions. first list models give informative names, summarise nowcast posterior model join tidy data frame make analysis easier. allows us plot nowcasts model age group compared latest data. Looking plot shows small differences across models uncertainty generally decreasing model complexity increases. age groups clearly better nowcast others 35-59 year old age group particular poor nowcast coverage.  crude measure general sample performance can use leave one information criterion supplied loo package though note typically appropriate time series data (approximate LFO cross validation likely perform better), approximation used avoid refitting likely poor, accounting refitting model required. see model includes day week effects date report substantially outperformed baseline model adjustment complex models adjusted variation age week date test improved estimated sample performance uncertainty around estimates wide. rigorously, can evaluate nowcasts using proper scoring rules scoringutils package including weighted interval score. limit nowcasts scored last 7 days data make interpretation easier, transform nowcasts format required scoringutils, link latest available data, finally call scoringutils::eval_forecasts(). Note scoring single nowcasts difficult generalise findings one day reporting may unusual. informed view model pick ideally nowcast range dates evaluate . first step score overall performance. see baseline model variation actually performs well models include least day week, age groups variation week performing comparably. performance characteristics relatively similar across models (models biased towards underprediction example). Stratifying age group see trends performance fairly consistent small variation ordering model performs others. Stratifying date find interestingly complex models appear better earlier dates (data available) addition age group appearing factor drives increase performance. finding overall summary simple model performed comparably appears largely driven performance last nowcast target model significantly outperformed others (underlines need evaluate nowcasts different dates single data point may may anomalous may identified real trend). Finally can look across scores relative simple model variation. nicely captures role last data point performance also highlights variation across reference dates age groups models. difference performance hierarchical age models model treatss age groups independently also clear model performing well days 35-59 year age group.","code":"nowcasts <- list(   \"Reference: Fixed, Report: Fixed\" = nowcast,   \"Reference: Fixed, Report: Day of week\" = dow_nowcast,   \"Reference: Age, Report: Day of week\" = age_nowcast,   \"Reference: Age and week, Report: Day of week\" = week_nowcast,   \"Reference: Age and week by age, Report: Day of week\" = age_week_nowcast ) summarised_nowcasts <- map(   nowcasts, summary,   probs = c(0.025, 0.05, seq(0.1, 0.9, by = 0.1), 0.95, 0.975) ) summarised_nowcasts$`Independent by age, Reference: Week, Report: Day of week` <- independent_nowcast # nolint  summarised_nowcasts <- rbindlist(summarised_nowcasts, idcol = \"model\",                                  use.names = TRUE) summarised_nowcasts[, `:=`(   model = factor(     model,     levels = c(\"Reference: Fixed, Report: Fixed\",                \"Reference: Fixed, Report: Day of week\",                \"Reference: Age, Report: Day of week\",                \"Reference: Age and week, Report: Day of week\",                \"Reference: Age and week by age, Report: Day of week\",                \"Independent by age, Reference: Week, Report: Day of week\")),   age_group = factor(     age_group,     levels = c(\"00+\", \"00-04\", \"05-14\", \"15-34\", \"35-59\", \"60-79\", \"80+\")) )] enw_plot_nowcast_quantiles(   summarised_nowcasts, latest_obs = latest_nat_germany) +   facet_grid(vars(age_group), vars(model), scales = \"free_y\") loos <- map(nowcasts, ~ .$fit[[1]]$loo()) loo_compare(loos) #>                                                           elpd_diff se_diff #> Reference: Age group and week by age, Report: Day of week    0.0       0.0  #> Reference: Age group, Report: Day of week                  -15.8       7.2  #> Reference: Age group and week, Report: Day of week         -16.4       6.3  #> Reference: Fixed, Report: Day of week                      -28.4       9.6  #> Reference: Fixed, Report: Fixed                           -599.0      46.9 score <- enw_score_nowcast(  summarised_nowcasts,  latest_nat_germany[reference_date > (max(reference_date) - 7)] )  overall_score <- score |>   summarise_score(by = \"model\") |>   kable() age_score <- score |>   summarise_score(by = c(\"model\", \"age_group\")) |>   kable() date_score <- score |>   summarise_score(by = c(\"model\", \"reference_date\")) |>   kable() fixed_score <- score[model %in% \"Reference: Fixed, Report: Fixed\",                      .(reference_date, age_group, fixed_is = interval_score)] score <- merge(score, fixed_score, by = c(\"reference_date\", \"age_group\"))  score <- score[, interval_score := interval_score / fixed_is] score <- score[!model %in% \"Reference: Fixed, Report: Fixed\"] plot <- ggplot(score) +   aes(x = reference_date, y = interval_score, col = model) +   geom_hline(yintercept = 1, linetype = 2, size = 1.2, alpha = 0.5) +   geom_line(size = 1.1, alpha = 0.6) +   geom_point(size = 1.2) +   facet_wrap(vars(age_group)) +   scale_color_brewer(palette = \"Dark2\") +   scale_y_log10(labels = scales::percent)  plot <- enw_plot_theme(plot) +   labs(x = \"Reference date\",        y = \"Weighted interval score (relative to Reference: Fixed, Report: Fixed model)\") + # nolint   guides(col = guide_legend(title = \"Model\", ncol = 2)) plot"},{"path":"epiforecasts.io/epinowcast/articles/germany-age-stratified-nowcasting.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"Hierarchical nowcasting of age stratified COVID-19 hospitalisations in Germany","text":"vignette showcased using epinowcast nowcast age stratified COVID-19 hospitalisations Germany date test series increasingly complex models motivated data. also showed simple methods exploring nowcasts evaluating . Using limited information available us (nowcast single date used performance date motivate new models) appears models performed acceptably , aside last data point, models age day week effects likely performed better. also fairly clear performance degrades amount reported data reduced intuitively makes sense performance particularly sensitive first day reported data available (.e “now”). apparent finding delays evolve fairly independently across age groups motivates choosing model flexible , least date reference model. Despite independent model fixed effect model well overall, applications choosing model based evaluation, likely select relatively flexible model (day week, age group, age stratified weekly variation) relying hierarchical structure limit overfitting, excepting small reduction performance edge cases (hope edge cases common feature data). However practice, want explore nowcasting evaluating dates possible greater range model structures (discussed alternative modelling section vignette). Note proper scoring approach taken understand model performance (commonly used literature) ranking models based absolute errors groups high counts (35-59 age group) important nowcast correctly groups smaller counts (aged 80+).","code":""},{"path":"epiforecasts.io/epinowcast/articles/model.html","id":"decomposition-into-expected-final-notifications-and-report-delay-components","dir":"Articles","previous_headings":"","what":"Decomposition into expected final notifications and report delay components","title":"Model definition and implementation","text":"follow approach Höhle Heiden[2] consider distribution notifications (\\(n_{gtd}\\)) time occurrence (\\(t\\)) reporting delay (\\(d\\)) conditional final observed count \\(N_{gt}\\) dataset (\\(g\\)) , \\[\\begin{equation}   N_{gt} = \\sum_{d=0}^{D} n_{gtd} \\end{equation}\\] \\(D\\) represents maximum delay time occurrence time report theory infinite practice set value order make model identifiable computationally feasible. formulation means \\(n_{gtd} \\mid N_{gt}\\) multinomial probability vector (\\(p_{gtd}\\)) length \\(D\\) \\(t\\) \\(g\\) needs estimated time estimating expected number final notifications \\(\\mathbb{E}[N_{gt}] = \\lambda_{gt}\\). alternative approach, explored , consider \\(n_{gtd}\\) independently point model can defined standard regression appropriate observation model adjustment reporting delay (.e becomes Poisson Negative Binomial regression)[6]. implementation approach available Bastos et al.[6]. work needs done evaluate approaches produces accurate nowcasts epidemiological count data.","code":""},{"path":"epiforecasts.io/epinowcast/articles/model.html","id":"expected-final-notifications","dir":"Articles","previous_headings":"","what":"Expected final notifications","title":"Model definition and implementation","text":"follow approach Günther et al.[1] specify model expected final notifications first order random walk. model can principle model complex time-series approach, gaussian process, mechanistic semi-mechanistic compartmental model. Extending flexibility model area work evaluating benefits tradeoffs complex approaches. \\[\\begin{align}   \\log (\\lambda_{gt}) &\\sim \\text{Normal}\\left(\\log (\\lambda_{gt-1}) , \\sigma^{\\lambda}_{g} \\right) \\\\   \\log (\\lambda_{g0}) &\\sim \\text{Normal}\\left(\\log (N_{g0}), 1 \\right) \\\\ \\sigma^{\\lambda}_{g} &\\sim \\text{Half-Normal}\\left(0, 1\\right) \\end{align}\\]","code":""},{"path":"epiforecasts.io/epinowcast/articles/model.html","id":"delay-distribution","dir":"Articles","previous_headings":"","what":"Delay distribution","title":"Model definition and implementation","text":"following approach Günther et al.[1] define delay distribution (\\(p_{gtd}\\)) discrete time hazard model (\\(h_{gtd} =\\text{P} \\left(\\text{delay}=d|\\text{delay} \\geq d, W_{gtd}\\right)\\)) extend model decompose \\(W_{gtd}\\) 3 components: hazard derived parametric delay distribution (\\(\\gamma_{gtd}\\)) dependent covariates date occurrence, hazard derived parametric distribution (\\(\\delta_{gtd}\\)) dependent covariates date occurrence, hazard dependent covariates referenced date report (\\(\\epsilon_{gtd}\\)). first component (\\(\\gamma_{gtd}\\)) assume probability reporting \\(p^{\\prime}_{gtd}\\) given date given follow parametric distribution (baseline case discretised log normal distribution) log mean log standard deviation defined using intercept arbitrary shared, reference date indexed, covariates fixed (\\(\\alpha_{}\\)) random (\\(\\beta_{}\\)) coefficients, \\[\\begin{align}   p^{\\prime}_{gtd} &\\sim \\text{LogNormal} \\left(\\mu_{gt}, \\upsilon_{gt} \\right) \\\\   \\mu_{gt} &= \\mu_0 + \\alpha_{\\mu} X_{\\gamma} + \\beta_{\\mu} Z_{\\gamma} \\\\   \\upsilon_{gt} &= \\text{exp} \\left( \\upsilon_0 + \\alpha_{\\upsilon} X_{\\gamma} + \\beta_{\\upsilon} Z_{\\gamma} \\right) \\end{align}\\] parametric logit hazard (probability report given date conditional already reported) component model , \\[\\begin{equation}   \\gamma_{gtd} = \\text{logit} \\left(\\frac{p^{\\prime}_{gtd}}{\\left(1 -\\sum^{d-1}_{d^{\\prime}=0} p^{\\prime}_{gtd^{\\prime}} \\right)} \\right) \\end{equation}\\] non-distributional logit hazard components date occurrence report defined using intercept arbitrary shared covariates fixed (\\(\\alpha_{}\\)) random (\\(\\beta_{}\\)) coefficients. \\[\\begin{align}   \\delta_{gtd} &= \\mu_0 + \\alpha_{\\delta} X_{\\delta} + \\beta_{\\delta} Z_{\\delta} \\\\   \\epsilon_{gtd} &= \\epsilon_0 + \\alpha_{\\epsilon} X_{\\epsilon} + \\beta_{\\epsilon} Z_{\\epsilon} \\end{align}\\] overall hazard group, occurrence time, delay , \\[\\begin{equation}   \\text{logit} (h_{gtd}) = \\gamma_{gtd} + \\delta_{gtd} +  \\upsilon_{gtd},\\ h_{gtD} = 1 \\end{equation}\\] hazard final day assumed 1 order enforce constraint reported observations reported within specified maximum delay. probability report given delay, occurrence date, group follows, \\[\\begin{equation}   p_{gt0} = h_{gt0},\\ p_{gtd} = \\left(1 -\\sum^{d-1}_{d^{\\prime}=0} p_{gtd^{\\prime}} \\right) \\times h_{gtd} \\end{equation}\\] (\\(\\alpha_{}\\)) random (\\(\\beta_{}\\)) coefficients standard normal priors default standard half-normal priors pooled standard deviations.","code":""},{"path":"epiforecasts.io/epinowcast/articles/model.html","id":"observation-model-and-nowcast","dir":"Articles","previous_headings":"","what":"Observation model and nowcast","title":"Model definition and implementation","text":"Expected notifications time occurrence (\\(t\\)) reporting delay can now found multiplying expected final notifications \\(t\\) probability reporting day delay (\\(p_{gtd}\\)). assume negative binomial observation model joint overdispersion parameter (1 square root standard half normal prior) produce nowcast final observed notifications occurrence time summing posterior estimates observed notification occurrence time. \\[\\begin{align}   n_{gtd} \\mid \\lambda_{gt},p_{gtd}  &\\sim \\text{NB}(\\lambda_{gt} \\times p_{gtd}, \\phi),\\ t=1,...,T. \\\\   \\frac{1}{\\phi^2} &\\sim \\text{Half-Normal}(0, 1) \\\\   N_{gt} &= \\sum_{d=0}^{D} n_{gtd} \\end{align}\\]","code":""},{"path":"epiforecasts.io/epinowcast/articles/model.html","id":"implementation","dir":"Articles","previous_headings":"","what":"Implementation","title":"Model definition and implementation","text":"model implemented stan using cmdstanr defaults altered[4,5]. Optional within chain parallelisation available across dates occurrence reduce runtimes. Sparse design matrices used covariates limit number probability mass functions need calculated. epinowcast incorporates additional functionality written R[7] enable plotting nowcasts posterior predictions, summarising nowcasts, scoring using scoringutils[8]. functionality modular allowing users extend alter underlying model whilst continuing use package framework.","code":""},{"path":"epiforecasts.io/epinowcast/articles/model.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Model definition and implementation","text":"1. Günther, F., Bender, ., Katz, K., Küchenhoff, H., & Höhle, M. (2021). Nowcasting COVID-19 pandemic Bavaria. Biometrical Journal, 63(3), 490–502. https://doi.org/10.1002/bimj.202000112 2. Höhle, M., & Heiden, M. der. (2014). Bayesian nowcasting STEC O104:H4 outbreak Germany, 2011. Biometrics, 70(4), 993–1002. https://doi.org/10.1111/biom.12194 3. Meyer, S., Held, L., & Höhle, M. (2017). Spatio-temporal analysis epidemic phenomena using R package surveillance. Journal Statistical Software, 77(11), 1–55. https://doi.org/10.18637/jss.v077.i11 4. Team, S. D. (2021). Stan modeling language users guide reference manual, 2.28.1. 5. Gabry, J., & Češnovar, R. (2021). Cmdstanr: R interface ’cmdstan’. 6. Bastos, L. S., Economou, T., Gomes, M. F. C., Villela, D. . M., Coelho, F. C., Cruz, O. G., Stoner, O., Bailey, T., & Codeço, C. T. (2019). modelling approach correcting reporting delays disease surveillance data. Statistics Medicine, 38(22), 4363–4377. https://doi.org/10.1002/sim.8303 7. R Core Team. (2019). R: language environment statistical computing. R Foundation Statistical Computing. https://www.R-project.org/ 8. Bosse, N. (2020). Scoringutils: collection proper scoring rules metrics assess predictions. https://github.com/epiforecasts/scoringutils","code":""},{"path":"epiforecasts.io/epinowcast/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Sam Abbott. Author, maintainer. Adrian Lison. Author. Michael DeWitt. Contributor.","code":""},{"path":"epiforecasts.io/epinowcast/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Sam Abbott (2021). epinowcast: Hierarchical nowcasting right censored epidemiological counts,  DOI: 10.5281/zenodo.5637165","code":"@Article{,   title = {epinowcast: Hierarchical nowcasting of right censored epidemiological counts},   author = {Sam Abbott},   journal = {Zenodo},   year = {2021},   doi = {10.5281/zenodo.5637165}, }"},{"path":"epiforecasts.io/epinowcast/index.html","id":"hierarchical-nowcasting-of-right-censored-epidemiological-counts","dir":"","previous_headings":"","what":"Hierarchical Nowcasting of Right Censored Epidemiological Counts","title":"Hierarchical Nowcasting of Right Censored Epidemiological Counts","text":"package contains tools enable flexible efficient hierarchical nowcasting right censored epidemiological counts using semi-mechanistic Bayesian method support day reference day report effects. Nowcasting context estimation total notifications (example hospitalisations deaths) reported given date based currently reported pattern reporting previous days. can useful tracking spread infectious disease real-time otherwise changes trends can obfuscated partial reporting detection may delayed due use simpler methods like truncation","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/index.html","id":"installing-the-package","dir":"","previous_headings":"Installation","what":"Installing the package","title":"Hierarchical Nowcasting of Right Censored Epidemiological Counts","text":"Install stable development version package : Install unstable development GitHub using following,","code":"install.packages(\"epinowcast\", repos = \"https://epiforecasts.r-universe.dev\") remotes::install_github(\"epiforecasts/epinowcast\", dependencies = TRUE)"},{"path":"epiforecasts.io/epinowcast/index.html","id":"installing-cmdstan","dir":"","previous_headings":"Installation","what":"Installing CmdStan","title":"Hierarchical Nowcasting of Right Censored Epidemiological Counts","text":"don’t already CmdStan installed , addition installing epinowcast, also necessary install CmdStan using CmdStanR’s install_cmdstan() function enable model fitting epinowcast. suitable C++ toolchain also required. Instructions provided Getting started CmdStanR vignette. See CmdStanR documentation details support.","code":"cmdstanr::install_cmdstan()"},{"path":"epiforecasts.io/epinowcast/index.html","id":"quick-start","dir":"","previous_headings":"","what":"Quick start","title":"Hierarchical Nowcasting of Right Censored Epidemiological Counts","text":"quick start use COVID-19 hospitalisations date positive test Germany available 1st October 2021 demonstrate specification fitting simple nowcasting model using epinowcast. Examples using complex models available package vignettes papers linked literature vignette.","code":""},{"path":"epiforecasts.io/epinowcast/index.html","id":"package","dir":"","previous_headings":"Quick start","what":"Package","title":"Hierarchical Nowcasting of Right Censored Epidemiological Counts","text":"well epinowcast quick start makes use data.table ggplot2 installed epinowcast installed.","code":"library(epinowcast) library(data.table) library(ggplot2)"},{"path":"epiforecasts.io/epinowcast/index.html","id":"data","dir":"","previous_headings":"Quick start","what":"Data","title":"Hierarchical Nowcasting of Right Censored Epidemiological Counts","text":"Nowcasting effectively estimation reporting patterns recently reported data. requires data patterns previous observations typically means time series data reported multiple consecutive days (theory non-consecutive days used yet supported epinowcast). quick start data sourced Robert Koch Institute via Germany Nowcasting hub deconvolved weekly data days negative reported hospitalisations adjusted. first filter snapshot retrospective data available 40 days 1st October contains 40 days data produce nowcast target based latest available hospitalisations date positive test.","code":"nat_germany_hosp <- germany_covid19_hosp[location == \"DE\"][age_group %in% \"00+\"] nat_germany_hosp <- nat_germany_hosp[report_date <= as.Date(\"2021-10-01\")]  retro_nat_germany <- enw_retrospective_data(   nat_germany_hosp,   rep_days = 40, ref_days = 40 ) retro_nat_germany #>      reference_date location age_group confirm report_date #>   1:     2021-07-13       DE       00+      21  2021-07-13 #>   2:     2021-07-14       DE       00+      22  2021-07-14 #>   3:     2021-07-15       DE       00+      28  2021-07-15 #>   4:     2021-07-16       DE       00+      19  2021-07-16 #>   5:     2021-07-17       DE       00+      20  2021-07-17 #>  ---                                                       #> 857:     2021-07-14       DE       00+      72  2021-08-21 #> 858:     2021-07-15       DE       00+      69  2021-08-22 #> 859:     2021-07-13       DE       00+      59  2021-08-21 #> 860:     2021-07-14       DE       00+      72  2021-08-22 #> 861:     2021-07-13       DE       00+      59  2021-08-22 latest_germany_hosp <- enw_latest_data(nat_germany_hosp, ref_window = c(80, 40)) latest_germany_hosp #>     reference_date location age_group confirm #>  1:     2021-07-13       DE       00+      60 #>  2:     2021-07-14       DE       00+      74 #>  3:     2021-07-15       DE       00+      69 #>  4:     2021-07-16       DE       00+      49 #>  5:     2021-07-17       DE       00+      67 #>  6:     2021-07-18       DE       00+      51 #>  7:     2021-07-19       DE       00+      36 #>  8:     2021-07-20       DE       00+      96 #>  9:     2021-07-21       DE       00+      94 #> 10:     2021-07-22       DE       00+      99 #> 11:     2021-07-23       DE       00+      88 #> 12:     2021-07-24       DE       00+      95 #> 13:     2021-07-25       DE       00+      75 #> 14:     2021-07-26       DE       00+      29 #> 15:     2021-07-27       DE       00+      81 #> 16:     2021-07-28       DE       00+     159 #> 17:     2021-07-29       DE       00+     143 #> 18:     2021-07-30       DE       00+     117 #> 19:     2021-07-31       DE       00+     132 #> 20:     2021-08-01       DE       00+      80 #> 21:     2021-08-02       DE       00+      59 #> 22:     2021-08-03       DE       00+     156 #> 23:     2021-08-04       DE       00+     183 #> 24:     2021-08-05       DE       00+     147 #> 25:     2021-08-06       DE       00+     155 #> 26:     2021-08-07       DE       00+     159 #> 27:     2021-08-08       DE       00+     119 #> 28:     2021-08-09       DE       00+      65 #> 29:     2021-08-10       DE       00+     204 #> 30:     2021-08-11       DE       00+     275 #> 31:     2021-08-12       DE       00+     273 #> 32:     2021-08-13       DE       00+     270 #> 33:     2021-08-14       DE       00+     262 #> 34:     2021-08-15       DE       00+     192 #> 35:     2021-08-16       DE       00+     140 #> 36:     2021-08-17       DE       00+     323 #> 37:     2021-08-18       DE       00+     409 #> 38:     2021-08-19       DE       00+     370 #> 39:     2021-08-20       DE       00+     361 #> 40:     2021-08-21       DE       00+     339 #> 41:     2021-08-22       DE       00+     258 #>     reference_date location age_group confirm"},{"path":"epiforecasts.io/epinowcast/index.html","id":"data-preprocessing-and-model-specification","dir":"","previous_headings":"Quick start","what":"Data preprocessing and model specification","title":"Hierarchical Nowcasting of Right Censored Epidemiological Counts","text":"Process reported data format required epinowcast return data.table. stage specify grouping (.e age, location) . can useful check output beginning model make sure everything expected. Construct intercept model date reference using metadata produced enw_preprocess_data(). Note epinowcast uses sparse design matrix reduce runtimes design matrix shows unique rows index containing mapping full design matrix. Construct model random effect day report using metadata produced enw_preprocess_data().","code":"pobs <- enw_preprocess_data(retro_nat_germany, max_delay = 40) pobs #>                    obs          new_confirm             latest #> 1: <data.table[860x9]> <data.table[860x11]> <data.table[41x8]> #>     reporting_triangle       metareference          metareport time snapshots #> 1: <data.table[41x42]> <data.table[41x10]> <data.table[80x11]>   41        41 #>    groups max_delay   max_date #> 1:      1        40 2021-08-22 reference_effects <- enw_formula(pobs$metareference[[1]]) reference_effects #> $fixed #> $fixed$formula #> ~1 #> <environment: 0x55e47ce786d0> #>  #> $fixed$design #>   (Intercept) #> 1           1 #>  #> $fixed$index #>  [1] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #> [39] 1 1 1 #>  #>  #> $random #> $random$formula #> ~1 #> <environment: 0x55e47ce786d0> #>  #> $random$design #>      (Intercept) #> attr(,\"assign\") #> [1] 0 #>  #> $random$index #> integer(0) report_effects <- enw_formula(pobs$metareport[[1]], random = \"day_of_week\") report_effects #> $fixed #> $fixed$formula #> ~1 + day_of_week #> <environment: 0x55e47d3691c8> #>  #> $fixed$design #>   (Intercept) day_of_weekFriday day_of_weekMonday day_of_weekSaturday #> 1           1                 0                 0                   0 #> 2           1                 0                 0                   0 #> 3           1                 0                 0                   0 #> 4           1                 1                 0                   0 #> 5           1                 0                 0                   1 #> 6           1                 0                 0                   0 #> 7           1                 0                 1                   0 #>   day_of_weekSunday day_of_weekThursday day_of_weekTuesday day_of_weekWednesday #> 1                 0                   0                  1                    0 #> 2                 0                   0                  0                    1 #> 3                 0                   1                  0                    0 #> 4                 0                   0                  0                    0 #> 5                 0                   0                  0                    0 #> 6                 1                   0                  0                    0 #> 7                 0                   0                  0                    0 #>  #> $fixed$index #>  [1] 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 #> [39] 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 #> [77] 7 1 2 3 #>  #>  #> $random #> $random$formula #> ~0 + fixed + day_of_week #> <environment: 0x55e47d3691c8> #>  #> $random$design #>   fixed day_of_week #> 1     0           1 #> 2     0           1 #> 3     0           1 #> 4     0           1 #> 5     0           1 #> 6     0           1 #> 7     0           1 #> attr(,\"assign\") #> [1] 1 2 #>  #> $random$index #> [1] 1 2 3 4 5 6 7"},{"path":"epiforecasts.io/epinowcast/index.html","id":"model-fitting","dir":"","previous_headings":"Quick start","what":"Model fitting","title":"Hierarchical Nowcasting of Right Censored Epidemiological Counts","text":"First compile model. step can left epinowcast want use multiple cores per chain speed model fitting need compile model feature turned . now fit model produce nowcast using fit. Note use two chains using two threads demonstration general using 4 chains recommended. Also note silenced fitting progress potential warning messages purposes keeping quick start short general done.","code":"model <- enw_model(threads = TRUE) options(mc.cores = 2) nowcast <- epinowcast(pobs,   model = model,   report_effects = report_effects,   reference_effects = reference_effects,   save_warmup = FALSE, pp = TRUE,   chains = 2, threads_per_chain = 2,   show_messages = FALSE, refresh = 0 ) #> Running MCMC with 2 parallel chains, with 2 thread(s) per chain... #>  #> Chain 2 finished in 117.2 seconds. #> Chain 1 finished in 122.0 seconds. #>  #> Both chains finished successfully. #> Mean chain execution time: 119.6 seconds. #> Total execution time: 122.1 seconds."},{"path":"epiforecasts.io/epinowcast/index.html","id":"results","dir":"","previous_headings":"Quick start","what":"Results","title":"Hierarchical Nowcasting of Right Censored Epidemiological Counts","text":"Print output epinowcast includes diagnostic information, data used fitting, cmdstanr object. Summarise nowcast latest snapshot data. Plot summarised nowcast currently observed data (optionally recent data comparison purposes).  Plot posterior predictions observed notifications date report check well model reproduces observed data.  Rather using methods supplied epinowcast directly, package functions can also used extract nowcast posterior samples, summarise , plot . demonstrated plotting 7 day incidence hospitalisations.","code":"nowcast #>                    obs          new_confirm             latest #> 1: <data.table[860x9]> <data.table[860x11]> <data.table[41x8]> #>     reporting_triangle       metareference          metareport time snapshots #> 1: <data.table[41x42]> <data.table[41x10]> <data.table[80x11]>   41        41 #>    groups max_delay   max_date               fit       data  fit_args samples #> 1:      1        40 2021-08-22 <CmdStanMCMC[32]> <list[39]> <list[6]>    2000 #>    max_rhat divergent_transitions per_divergent_transitions max_treedepth #> 1:     1.01                     0                         0             8 #>    no_at_max_treedepth per_at_max_treedepth run_time #> 1:                  50                0.025    122.1 head(summary(nowcast, probs = c(0.05, 0.95)), n = 10) #>     reference_date location age_group confirm max_confirm cum_prop_reported #>  1:     2021-07-14       DE       00+      72          72                 1 #>  2:     2021-07-15       DE       00+      69          69                 1 #>  3:     2021-07-16       DE       00+      47          47                 1 #>  4:     2021-07-17       DE       00+      65          65                 1 #>  5:     2021-07-18       DE       00+      50          50                 1 #>  6:     2021-07-19       DE       00+      36          36                 1 #>  7:     2021-07-20       DE       00+      94          94                 1 #>  8:     2021-07-21       DE       00+      91          91                 1 #>  9:     2021-07-22       DE       00+      99          99                 1 #> 10:     2021-07-23       DE       00+      86          86                 1 #>     delay group    mean median        sd    mad q5 q95      rhat ess_bulk #>  1:    39     1 72.0000     72 0.0000000 0.0000 72  72        NA       NA #>  2:    38     1 69.0440     69 0.2099668 0.0000 69  69 0.9992454 1665.980 #>  3:    37     1 47.0910     47 0.3110746 0.0000 47  48 0.9994101 1947.687 #>  4:    36     1 65.2030     65 0.4548565 0.0000 65  66 1.0019851 1877.879 #>  5:    35     1 50.2450     50 0.4980954 0.0000 50  51 0.9992548 1752.784 #>  6:    34     1 36.2320     36 0.5111816 0.0000 36  37 1.0018554 1814.197 #>  7:    33     1 94.4740     94 0.6946692 0.0000 94  96 0.9994547 1876.378 #>  8:    32     1 91.7315     91 0.9142350 0.0000 91  94 1.0009333 1706.214 #>  9:    31     1 99.9980    100 1.0632786 1.4826 99 102 0.9997293 1924.759 #> 10:    30     1 87.1405     87 1.1394775 1.4826 86  89 0.9994695 1833.535 #>     ess_tail #>  1:       NA #>  2: 1685.329 #>  3: 1783.730 #>  4: 1840.178 #>  5: 1727.676 #>  6: 1802.610 #>  7: 1893.233 #>  8: 1817.178 #>  9: 1665.602 #> 10: 1868.667 plot(nowcast, latest_obs = latest_germany_hosp) plot(nowcast, type = \"posterior\") +   facet_wrap(vars(reference_date), scale = \"free\") # extract samples samples <- summary(nowcast, type = \"nowcast_samples\")  # Take a 7 day rolling sum of both samples and observations cols <- c(\"confirm\", \"sample\") samples[, (cols) := lapply(.SD, frollsum, n = 7),   .SDcols = cols, by = \".draw\" ][!is.na(sample)] #>        reference_date location age_group confirm max_confirm cum_prop_reported #>     1:     2021-07-20       DE       00+     433          94                 1 #>     2:     2021-07-20       DE       00+     433          94                 1 #>     3:     2021-07-20       DE       00+     433          94                 1 #>     4:     2021-07-20       DE       00+     433          94                 1 #>     5:     2021-07-20       DE       00+     433          94                 1 #>    ---                                                                         #> 67996:     2021-08-22       DE       00+    1093          45                 1 #> 67997:     2021-08-22       DE       00+    1093          45                 1 #> 67998:     2021-08-22       DE       00+    1093          45                 1 #> 67999:     2021-08-22       DE       00+    1093          45                 1 #> 68000:     2021-08-22       DE       00+    1093          45                 1 #>        delay group .chain .iteration .draw sample #>     1:    33     1      1          1     1    435 #>     2:    33     1      1          2     2    441 #>     3:    33     1      1          3     3    435 #>     4:    33     1      1          4     4    435 #>     5:    33     1      1          5     5    438 #>    ---                                            #> 67996:     0     1      2        996  1996   2014 #> 67997:     0     1      2        997  1997   2109 #> 67998:     0     1      2        998  1998   2051 #> 67999:     0     1      2        999  1999   2031 #> 68000:     0     1      2       1000  2000   2311 latest_germany_hosp_7day <- copy(latest_germany_hosp)[   ,   confirm := frollsum(confirm, n = 7) ][!is.na(confirm)]  # Summarise samples sum_across_last_7_days <- enw_summarise_samples(samples)  # Plot samples enw_plot_nowcast_quantiles(sum_across_last_7_days, latest_germany_hosp_7day)"},{"path":"epiforecasts.io/epinowcast/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Hierarchical Nowcasting of Right Censored Epidemiological Counts","text":"using epinowcast work please consider citing using following,","code":"#>  #> To cite epinowcast in publications use: #>  #>   Sam Abbott (2021). epinowcast: Hierarchical nowcasting of right #>   censored epidemiological counts, DOI: 10.5281/zenodo.5637165 #>  #> A BibTeX entry for LaTeX users is #>  #>   @Article{, #>     title = {epinowcast: Hierarchical nowcasting of right censored epidemiological counts}, #>     author = {Sam Abbott}, #>     journal = {Zenodo}, #>     year = {2021}, #>     doi = {10.5281/zenodo.5637165}, #>   }"},{"path":"epiforecasts.io/epinowcast/index.html","id":"how-to-make-a-bug-report-or-feature-request","dir":"","previous_headings":"","what":"How to make a bug report or feature request","title":"Hierarchical Nowcasting of Right Censored Epidemiological Counts","text":"Please briefly describe problem output expect issue. question, please don’t open issue. Instead, ask Q page.","code":""},{"path":"epiforecasts.io/epinowcast/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Hierarchical Nowcasting of Right Censored Epidemiological Counts","text":"welcome contributions new contributors! particularly appreciate help priority problems issues. Please check add issues, /add pull request. interested expanding functionality underlying model note epinowcast allows users pass models meaning alternative parameterisations, example altering forecast model used inferring expected observations, may easily tested within package infrastructure. testing done alterations increase flexibility package model improves defaults welcome via pull request communication package authors.","code":""},{"path":"epiforecasts.io/epinowcast/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Hierarchical Nowcasting of Right Censored Epidemiological Counts","text":"Please note epinowcast project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"epiforecasts.io/epinowcast/reference/check_quantiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Quantiles Required are Present — check_quantiles","title":"Check Quantiles Required are Present — check_quantiles","text":"Check Quantiles Required Present","code":""},{"path":"epiforecasts.io/epinowcast/reference/check_quantiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Quantiles Required are Present — check_quantiles","text":"","code":"check_quantiles(posterior, req_probs = c(0.5, 0.95, 0.2, 0.8))"},{"path":"epiforecasts.io/epinowcast/reference/check_quantiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Quantiles Required are Present — check_quantiles","text":"posterior dataframe containing quantiles identified using q5 naming scheme. Default: default. req_probs numeric vector required probabilities. Default: c(0.5, 0.95, 0.2, 0.8).","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_add_cumulative_membership.html","id":null,"dir":"Reference","previous_headings":"","what":"FUNCTION_TITLE — enw_add_cumulative_membership","title":"FUNCTION_TITLE — enw_add_cumulative_membership","text":"FUNCTION_DESCRIPTION","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_add_cumulative_membership.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FUNCTION_TITLE — enw_add_cumulative_membership","text":"","code":"enw_add_cumulative_membership(metaobs, feature)"},{"path":"epiforecasts.io/epinowcast/reference/enw_add_cumulative_membership.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FUNCTION_TITLE — enw_add_cumulative_membership","text":"metaobs PARAM_DESCRIPTION feature PARAM_DESCRIPTION","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_add_cumulative_membership.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FUNCTION_TITLE — enw_add_cumulative_membership","text":"OUTPUT_DESCRIPTION","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/reference/enw_add_delay.html","id":null,"dir":"Reference","previous_headings":"","what":"FUNCTION_TITLE — enw_add_delay","title":"FUNCTION_TITLE — enw_add_delay","text":"FUNCTION_DESCRIPTION","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_add_delay.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FUNCTION_TITLE — enw_add_delay","text":"","code":"enw_add_delay(obs)"},{"path":"epiforecasts.io/epinowcast/reference/enw_add_delay.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FUNCTION_TITLE — enw_add_delay","text":"obs PARAM_DESCRIPTION","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_add_delay.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FUNCTION_TITLE — enw_add_delay","text":"OUTPUT_DESCRIPTION","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/reference/enw_add_latest_obs_to_nowcast.html","id":null,"dir":"Reference","previous_headings":"","what":"FUNCTION_TITLE — enw_add_latest_obs_to_nowcast","title":"FUNCTION_TITLE — enw_add_latest_obs_to_nowcast","text":"FUNCTION_DESCRIPTION","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_add_latest_obs_to_nowcast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FUNCTION_TITLE — enw_add_latest_obs_to_nowcast","text":"","code":"enw_add_latest_obs_to_nowcast(nowcast, obs)"},{"path":"epiforecasts.io/epinowcast/reference/enw_add_latest_obs_to_nowcast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FUNCTION_TITLE — enw_add_latest_obs_to_nowcast","text":"nowcast PARAM_DESCRIPTION obs PARAM_DESCRIPTION","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_add_latest_obs_to_nowcast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FUNCTION_TITLE — enw_add_latest_obs_to_nowcast","text":"OUTPUT_DESCRIPTION","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/reference/enw_add_max_reported.html","id":null,"dir":"Reference","previous_headings":"","what":"FUNCTION_TITLE — enw_add_max_reported","title":"FUNCTION_TITLE — enw_add_max_reported","text":"FUNCTION_DESCRIPTION","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_add_max_reported.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FUNCTION_TITLE — enw_add_max_reported","text":"","code":"enw_add_max_reported(obs)"},{"path":"epiforecasts.io/epinowcast/reference/enw_add_max_reported.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FUNCTION_TITLE — enw_add_max_reported","text":"obs PARAM_DESCRIPTION","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_add_max_reported.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FUNCTION_TITLE — enw_add_max_reported","text":"OUTPUT_DESCRIPTION","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/reference/enw_add_metaobs_features.html","id":null,"dir":"Reference","previous_headings":"","what":"FUNCTION_TITLE — enw_add_metaobs_features","title":"FUNCTION_TITLE — enw_add_metaobs_features","text":"FUNCTION_DESCRIPTION","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_add_metaobs_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FUNCTION_TITLE — enw_add_metaobs_features","text":"","code":"enw_add_metaobs_features(metaobs, holidays = c(), holidays_to = \"Sunday\")"},{"path":"epiforecasts.io/epinowcast/reference/enw_add_metaobs_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FUNCTION_TITLE — enw_add_metaobs_features","text":"metaobs PARAM_DESCRIPTION holidays PARAM_DESCRIPTION holidays_to character string assign holidays present. Replaces day week defaults Sunday.","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_add_metaobs_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FUNCTION_TITLE — enw_add_metaobs_features","text":"OUTPUT_DESCRIPTION","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/reference/enw_add_pooling_effect.html","id":null,"dir":"Reference","previous_headings":"","what":"FUNCTION_TITLE — enw_add_pooling_effect","title":"FUNCTION_TITLE — enw_add_pooling_effect","text":"FUNCTION_DESCRIPTION","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_add_pooling_effect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FUNCTION_TITLE — enw_add_pooling_effect","text":"","code":"enw_add_pooling_effect(   effects,   string,   var_name = \"sd\",   finder_fn = startsWith )"},{"path":"epiforecasts.io/epinowcast/reference/enw_add_pooling_effect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FUNCTION_TITLE — enw_add_pooling_effect","text":"effects PARAM_DESCRIPTION string PARAM_DESCRIPTION var_name PARAM_DESCRIPTION, Default: 'sd' finder_fn PARAM_DESCRIPTION, Default: startsWith","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_add_pooling_effect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FUNCTION_TITLE — enw_add_pooling_effect","text":"OUTPUT_DESCRIPTION","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/reference/enw_as_data_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Format data for use with stan — enw_as_data_list","title":"Format data for use with stan — enw_as_data_list","text":"Format data use stan","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_as_data_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format data for use with stan — enw_as_data_list","text":"","code":"enw_as_data_list(   pobs,   reference_effects = epinowcast::enw_formula(pobs$metareference[[1]]),   report_effects = epinowcast::enw_formula(pobs$metareport[[1]]),   priors = epinowcast::enw_priors(),   distribution = \"lognormal\",   nowcast = TRUE,   pp = FALSE,   likelihood = TRUE,   debug = FALSE,   output_loglik = FALSE )"},{"path":"epiforecasts.io/epinowcast/reference/enw_as_data_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format data for use with stan — enw_as_data_list","text":"pobs Output enw_preprocess_data(). reference_effects list fixed random design matrices defining date reference model. Defaults enw_formula() intercept model. report_effects list fixed random design matrices defining date reports model. Defaults enw_formula() intercept model. priors DESCRIPTION. distribution Character string indicating type distribution use reference date effects. default use lognormal options available include: gamma distributed (\"gamma\"). nowcast Logical, defaults TRUE. nowcast made using posterior predictions unobserved future reported notifications. pp Logical, defaults FALSE. posterior predictions made observed data. Useful evaluating performance model. likelihood Logical, defaults TRUE. likelihood included model debug Logical, defaults FALSE. within model debug information returned. output_loglik Logical, defaults FALSE. log-likelihood output. Disabling speed fitting evaluating model fit required.","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_as_data_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format data for use with stan — enw_as_data_list","text":"list required stan.","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/reference/enw_assign_group.html","id":null,"dir":"Reference","previous_headings":"","what":"FUNCTION_TITLE — enw_assign_group","title":"FUNCTION_TITLE — enw_assign_group","text":"FUNCTION_DESCRIPTION","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_assign_group.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FUNCTION_TITLE — enw_assign_group","text":"","code":"enw_assign_group(obs, by = c())"},{"path":"epiforecasts.io/epinowcast/reference/enw_assign_group.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FUNCTION_TITLE — enw_assign_group","text":"obs PARAM_DESCRIPTION PARAM_DESCRIPTION, Default: c()","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_assign_group.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FUNCTION_TITLE — enw_assign_group","text":"OUTPUT_DESCRIPTION","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/reference/enw_construct_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct preprocessed data — enw_construct_data","title":"Construct preprocessed data — enw_construct_data","text":"function used internally enw_preprocess_data() combine various pieces processed observed data single object. exposed user order allow modular data preprocessing though currently recommended. See documentation code enw_preprocess_data() expected inputs.","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_construct_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct preprocessed data — enw_construct_data","text":"","code":"enw_construct_data(   obs,   new_confirm,   latest,   reporting_triangle,   metareport,   metareference,   max_delay )"},{"path":"epiforecasts.io/epinowcast/reference/enw_construct_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct preprocessed data — enw_construct_data","text":"obs Observations addition empirical reporting proportions restricted specified maximum delay). new_confirm Incidence notifications reference report date. Empirical reporting distributions also added. latest latest available observations. reporting_triangle Incident observations report reference date standard reporting triangle matrix format. metareport Metadata report dates. metareference Metadata reference dates derived observations. max_delay Numeric defaults 20. maximum number days include delay distribution. Computation scales non-linearly setting consider maximum makes sense data carefully.","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_construct_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct preprocessed data — enw_construct_data","text":"data.table containing processed observations series nested data frames well variables containing metadata. : obs: (observations addition empirical reporting proportions restricted specified maximum delay). new_confirm: Incidence notifications reference report date. Empirical reporting distributions also added. latest: latest available observations. reporting_triangle: Incident observations report reference date standard reporting triangle matrix format. metareference: Metadata reference dates derived observations. metrareport: Metadata report dates. time: Numeric, number timepoints data. snapshots: Numeric, number available data snapshots use nowcasting. groups: Numeric, Number groups/strata supplied observations (set using ). max_delay: Numeric, maximum delay processed data max_date: maximum available report date.","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/reference/enw_construct_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct preprocessed data — enw_construct_data","text":"","code":"pobs <- enw_example(\"preprocessed\") enw_construct_data(   obs = pobs$obs[[1]],   new_confirm = pobs$new_confirm[[1]],   latest = pobs$latest[[1]],   reporting_triangle = pobs$reporting_triangle[[1]],   metareport = pobs$metareport[[1]],   metareference = pobs$metareference[[1]],   max_delay = pobs$max_delay[[1]] ) #>                    obs          new_confirm             latest #> 1: <data.table[630x9]> <data.table[630x11]> <data.table[41x8]> #>     reporting_triangle       metareference          metareport time snapshots #> 1: <data.table[41x22]> <data.table[41x10]> <data.table[60x11]>   41        41 #>    groups max_delay   max_date #> 1:      1        20 2021-08-22"},{"path":"epiforecasts.io/epinowcast/reference/enw_dates_to_factors.html","id":null,"dir":"Reference","previous_headings":"","what":"FUNCTION_TITLE — enw_dates_to_factors","title":"FUNCTION_TITLE — enw_dates_to_factors","text":"FUNCTION_DESCRIPTION","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_dates_to_factors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FUNCTION_TITLE — enw_dates_to_factors","text":"","code":"enw_dates_to_factors(data)"},{"path":"epiforecasts.io/epinowcast/reference/enw_dates_to_factors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FUNCTION_TITLE — enw_dates_to_factors","text":"data PARAM_DESCRIPTION","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_dates_to_factors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FUNCTION_TITLE — enw_dates_to_factors","text":"OUTPUT_DESCRIPTION","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/reference/enw_design.html","id":null,"dir":"Reference","previous_headings":"","what":"FUNCTION_TITLE — enw_design","title":"FUNCTION_TITLE — enw_design","text":"FUNCTION_DESCRIPTION","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_design.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FUNCTION_TITLE — enw_design","text":"","code":"enw_design(formula, data, no_contrasts = FALSE, sparse = TRUE, ...)"},{"path":"epiforecasts.io/epinowcast/reference/enw_design.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FUNCTION_TITLE — enw_design","text":"formula PARAM_DESCRIPTION data PARAM_DESCRIPTION no_contrasts PARAM_DESCRIPTION, Default: FALSE sparse PARAM_DESCRIPTION, Default: TRUE ... PARAM_DESCRIPTION","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_design.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FUNCTION_TITLE — enw_design","text":"OUTPUT_DESCRIPTION","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/reference/enw_effects_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"FUNCTION_TITLE — enw_effects_metadata","title":"FUNCTION_TITLE — enw_effects_metadata","text":"FUNCTION_DESCRIPTION","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_effects_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FUNCTION_TITLE — enw_effects_metadata","text":"","code":"enw_effects_metadata(design)"},{"path":"epiforecasts.io/epinowcast/reference/enw_effects_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FUNCTION_TITLE — enw_effects_metadata","text":"design PARAM_DESCRIPTION","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_effects_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FUNCTION_TITLE — enw_effects_metadata","text":"OUTPUT_DESCRIPTION","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/reference/enw_example.html","id":null,"dir":"Reference","previous_headings":"","what":"Load a package example — enw_example","title":"Load a package example — enw_example","text":"Loads examples nowcasts produce using example scripts. Used streamline examples, package tests enable users explore package functionality without needing install cmdstanr.","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load a package example — enw_example","text":"","code":"enw_example(type = \"nowcast\")"},{"path":"epiforecasts.io/epinowcast/reference/enw_example.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load a package example — enw_example","text":"type character string indicating example load. Supported options \"nowcast, \"preprocessed_observations\", \"observations\", \"script\" output epinowcast()], enw_preprocess_data(), enw_latest_data() applied germany_covid19_hosp package dataset), script used generate examples respectively.","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_example.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load a package example — enw_example","text":"data.table summarised output","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/reference/enw_example.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load a package example — enw_example","text":"","code":"# Load the nowcast enw_example(type = \"nowcast\") #>                    obs          new_confirm             latest #> 1: <data.table[630x9]> <data.table[630x11]> <data.table[41x8]> #>     reporting_triangle       metareference          metareport time snapshots #> 1: <data.table[41x22]> <data.table[41x10]> <data.table[60x11]>   41        41 #>    groups max_delay   max_date               fit       data  fit_args samples #> 1:      1        20 2021-08-22 <CmdStanMCMC[32]> <list[39]> <list[6]>    1000 #>    max_rhat divergent_transitions per_divergent_transitions max_treedepth #> 1:     1.01                     0                         0             8 #>    no_at_max_treedepth per_at_max_treedepth run_time #> 1:                 272                0.272     75.8  # Load the preprocessed observations enw_example(type = \"preprocessed_observations\") #>                    obs          new_confirm             latest #> 1: <data.table[630x9]> <data.table[630x11]> <data.table[41x8]> #>     reporting_triangle       metareference          metareport time snapshots #> 1: <data.table[41x22]> <data.table[41x10]> <data.table[60x11]>   41        41 #>    groups max_delay   max_date #> 1:      1        20 2021-08-22  # Load the latest observations enw_example(type = \"observations\") #>     reference_date location age_group confirm #>  1:     2021-07-13       DE       00+      60 #>  2:     2021-07-14       DE       00+      74 #>  3:     2021-07-15       DE       00+      69 #>  4:     2021-07-16       DE       00+      49 #>  5:     2021-07-17       DE       00+      67 #>  6:     2021-07-18       DE       00+      51 #>  7:     2021-07-19       DE       00+      36 #>  8:     2021-07-20       DE       00+      96 #>  9:     2021-07-21       DE       00+      94 #> 10:     2021-07-22       DE       00+      99 #> 11:     2021-07-23       DE       00+      88 #> 12:     2021-07-24       DE       00+      95 #> 13:     2021-07-25       DE       00+      75 #> 14:     2021-07-26       DE       00+      29 #> 15:     2021-07-27       DE       00+      81 #> 16:     2021-07-28       DE       00+     159 #> 17:     2021-07-29       DE       00+     143 #> 18:     2021-07-30       DE       00+     117 #> 19:     2021-07-31       DE       00+     132 #> 20:     2021-08-01       DE       00+      80 #> 21:     2021-08-02       DE       00+      59 #> 22:     2021-08-03       DE       00+     156 #> 23:     2021-08-04       DE       00+     183 #> 24:     2021-08-05       DE       00+     147 #> 25:     2021-08-06       DE       00+     155 #> 26:     2021-08-07       DE       00+     159 #> 27:     2021-08-08       DE       00+     119 #> 28:     2021-08-09       DE       00+      65 #> 29:     2021-08-10       DE       00+     204 #> 30:     2021-08-11       DE       00+     275 #> 31:     2021-08-12       DE       00+     273 #> 32:     2021-08-13       DE       00+     270 #> 33:     2021-08-14       DE       00+     262 #> 34:     2021-08-15       DE       00+     192 #> 35:     2021-08-16       DE       00+     140 #> 36:     2021-08-17       DE       00+     323 #> 37:     2021-08-18       DE       00+     409 #> 38:     2021-08-19       DE       00+     370 #> 39:     2021-08-20       DE       00+     361 #> 40:     2021-08-21       DE       00+     339 #> 41:     2021-08-22       DE       00+     258 #>     reference_date location age_group confirm  # Load the script used to generate these examples # Optionally source this script to regenerate the example readLines(enw_example(type = \"script\")) #>  [1] \"\"                                                                                     #>  [2] \"# Load epinowcast and data.table\"                                                     #>  [3] \"library(epinowcast)\"                                                                  #>  [4] \"library(data.table)\"                                                                  #>  [5] \"\"                                                                                     #>  [6] \"# Load and filter germany hospitalisations\"                                           #>  [7] \"nat_germany_hosp <- germany_covid19_hosp[location == \\\"DE\\\"][age_group %in% \\\"00+\\\"]\" #>  [8] \"nat_germany_hosp <- nat_germany_hosp[report_date <= as.Date(\\\"2021-10-01\\\")]\"         #>  [9] \"\"                                                                                     #> [10] \"# Make a retrospective dataset\"                                                       #> [11] \"retro_nat_germany <- enw_retrospective_data(\"                                         #> [12] \"  nat_germany_hosp,\"                                                                  #> [13] \"  rep_days = 40, ref_days = 40\"                                                       #> [14] \")\"                                                                                    #> [15] \"\"                                                                                     #> [16] \"# Get latest observations for the same time period\"                                   #> [17] \"latest_obs <- enw_latest_data(nat_germany_hosp, ref_window = c(80, 40))\"              #> [18] \"\"                                                                                     #> [19] \"# Preprocess observations\"                                                            #> [20] \"pobs <- enw_preprocess_data(retro_nat_germany, max_delay = 20)\"                       #> [21] \"\"                                                                                     #> [22] \"# Reference date model\"                                                               #> [23] \"reference_effects <- enw_formula(pobs$metareference[[1]])\"                            #> [24] \"\"                                                                                     #> [25] \"# Report date model\"                                                                  #> [26] \"report_effects <- enw_formula(pobs$metareport[[1]], random = \\\"day_of_week\\\")\"        #> [27] \"\"                                                                                     #> [28] \"# Compile nowcasting model\"                                                           #> [29] \"model <- enw_model(threads = TRUE)\"                                                   #> [30] \"\"                                                                                     #> [31] \"# Fit nowcast model and produce a nowcast\"                                            #> [32] \"# Note that we have reduced samples for this example to reduce runtimes\"              #> [33] \"nowcast <- epinowcast(pobs,\"                                                          #> [34] \"  model = model,\"                                                                     #> [35] \"  report_effects = report_effects,\"                                                   #> [36] \"  reference_effects = reference_effects,\"                                             #> [37] \"  save_warmup = FALSE, pp = TRUE,\"                                                    #> [38] \"  chains = 2, threads_per_chain = 1,\"                                                 #> [39] \"  iter_warmup = 500, iter_sampling = 500\"                                             #> [40] \")\""},{"path":"epiforecasts.io/epinowcast/reference/enw_extend_date.html","id":null,"dir":"Reference","previous_headings":"","what":"FUNCTION_TITLE — enw_extend_date","title":"FUNCTION_TITLE — enw_extend_date","text":"FUNCTION_DESCRIPTION","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_extend_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FUNCTION_TITLE — enw_extend_date","text":"","code":"enw_extend_date(metaobs, max_delay = 20)"},{"path":"epiforecasts.io/epinowcast/reference/enw_extend_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FUNCTION_TITLE — enw_extend_date","text":"metaobs PARAM_DESCRIPTION max_delay PARAM_DESCRIPTION, Default: 20","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_extend_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FUNCTION_TITLE — enw_extend_date","text":"OUTPUT_DESCRIPTION","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/reference/enw_filter_obs.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter observations to restrict the maximum reporting delay — enw_filter_obs","title":"Filter observations to restrict the maximum reporting delay — enw_filter_obs","text":"Filter observations restrict maximum reporting delay","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_filter_obs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter observations to restrict the maximum reporting delay — enw_filter_obs","text":"","code":"enw_filter_obs(obs, max_delay)"},{"path":"epiforecasts.io/epinowcast/reference/enw_filter_obs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter observations to restrict the maximum reporting delay — enw_filter_obs","text":"obs data frame containing least following variables: reference date (index date interest), report_date (report date observations), confirm (cumulative observations reference report date), group (added enw_assign_group()). max_delay Numeric defaults 20. maximum number days include delay distribution. Computation scales non-linearly setting consider maximum makes sense data carefully.","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_filter_obs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter observations to restrict the maximum reporting delay — enw_filter_obs","text":"data frame filtered dates report less equal reference date plus maximum delay.","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/reference/enw_filter_obs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter observations to restrict the maximum reporting delay — enw_filter_obs","text":"","code":"obs <- enw_example(\"preprocessed\")$obs[[1]] enw_filter_obs(obs, max_delay = 2) #>     reference_date group report_date location age_group confirm max_confirm #>  1:     2021-07-13     1  2021-07-13       DE       00+      21          59 #>  2:     2021-07-13     1  2021-07-14       DE       00+      33          59 #>  3:     2021-07-14     1  2021-07-14       DE       00+      22          72 #>  4:     2021-07-14     1  2021-07-15       DE       00+      34          72 #>  5:     2021-07-15     1  2021-07-15       DE       00+      28          69 #>  6:     2021-07-15     1  2021-07-16       DE       00+      43          69 #>  7:     2021-07-16     1  2021-07-16       DE       00+      19          47 #>  8:     2021-07-16     1  2021-07-17       DE       00+      32          47 #>  9:     2021-07-17     1  2021-07-17       DE       00+      20          65 #> 10:     2021-07-17     1  2021-07-18       DE       00+      27          65 #> 11:     2021-07-18     1  2021-07-18       DE       00+       9          50 #> 12:     2021-07-18     1  2021-07-19       DE       00+      15          50 #> 13:     2021-07-19     1  2021-07-19       DE       00+       3          36 #> 14:     2021-07-19     1  2021-07-20       DE       00+      19          36 #> 15:     2021-07-20     1  2021-07-20       DE       00+      36          94 #> 16:     2021-07-20     1  2021-07-21       DE       00+      55          94 #> 17:     2021-07-21     1  2021-07-21       DE       00+      28          91 #> 18:     2021-07-21     1  2021-07-22       DE       00+      46          91 #> 19:     2021-07-22     1  2021-07-22       DE       00+      34          99 #> 20:     2021-07-22     1  2021-07-23       DE       00+      53          99 #> 21:     2021-07-23     1  2021-07-23       DE       00+      30          86 #> 22:     2021-07-23     1  2021-07-24       DE       00+      42          86 #> 23:     2021-07-24     1  2021-07-24       DE       00+      31          93 #> 24:     2021-07-24     1  2021-07-25       DE       00+      39          93 #> 25:     2021-07-25     1  2021-07-25       DE       00+       8          74 #> 26:     2021-07-25     1  2021-07-26       DE       00+      12          74 #> 27:     2021-07-26     1  2021-07-26       DE       00+       9          28 #> 28:     2021-07-26     1  2021-07-27       DE       00+      15          28 #> 29:     2021-07-27     1  2021-07-27       DE       00+      35          78 #> 30:     2021-07-27     1  2021-07-28       DE       00+      46          78 #> 31:     2021-07-28     1  2021-07-28       DE       00+      51         156 #> 32:     2021-07-28     1  2021-07-29       DE       00+      79         156 #> 33:     2021-07-29     1  2021-07-29       DE       00+      47         135 #> 34:     2021-07-29     1  2021-07-30       DE       00+      84         135 #> 35:     2021-07-30     1  2021-07-30       DE       00+      36         114 #> 36:     2021-07-30     1  2021-07-31       DE       00+      56         114 #> 37:     2021-07-31     1  2021-07-31       DE       00+      38         126 #> 38:     2021-07-31     1  2021-08-01       DE       00+      54         126 #> 39:     2021-08-01     1  2021-08-01       DE       00+       7          77 #> 40:     2021-08-01     1  2021-08-02       DE       00+      12          77 #> 41:     2021-08-02     1  2021-08-02       DE       00+      13          59 #> 42:     2021-08-02     1  2021-08-03       DE       00+      26          59 #> 43:     2021-08-03     1  2021-08-03       DE       00+      51         149 #> 44:     2021-08-03     1  2021-08-04       DE       00+      94         149 #> 45:     2021-08-04     1  2021-08-04       DE       00+      51         166 #> 46:     2021-08-04     1  2021-08-05       DE       00+      94         166 #> 47:     2021-08-05     1  2021-08-05       DE       00+      45         133 #> 48:     2021-08-05     1  2021-08-06       DE       00+      66         133 #> 49:     2021-08-06     1  2021-08-06       DE       00+      47         137 #> 50:     2021-08-06     1  2021-08-07       DE       00+      78         137 #> 51:     2021-08-07     1  2021-08-07       DE       00+      40         139 #> 52:     2021-08-07     1  2021-08-08       DE       00+      55         139 #> 53:     2021-08-08     1  2021-08-08       DE       00+      13          97 #> 54:     2021-08-08     1  2021-08-09       DE       00+      27          97 #> 55:     2021-08-09     1  2021-08-09       DE       00+      14          58 #> 56:     2021-08-09     1  2021-08-10       DE       00+      37          58 #> 57:     2021-08-10     1  2021-08-10       DE       00+      78         175 #> 58:     2021-08-10     1  2021-08-11       DE       00+     121         175 #> 59:     2021-08-11     1  2021-08-11       DE       00+      80         233 #> 60:     2021-08-11     1  2021-08-12       DE       00+     133         233 #> 61:     2021-08-12     1  2021-08-12       DE       00+      89         237 #> 62:     2021-08-12     1  2021-08-13       DE       00+     137         237 #> 63:     2021-08-13     1  2021-08-13       DE       00+      86         204 #> 64:     2021-08-13     1  2021-08-14       DE       00+     130         204 #> 65:     2021-08-14     1  2021-08-14       DE       00+      79         189 #> 66:     2021-08-14     1  2021-08-15       DE       00+     115         189 #> 67:     2021-08-15     1  2021-08-15       DE       00+      22         125 #> 68:     2021-08-15     1  2021-08-16       DE       00+      46         125 #> 69:     2021-08-16     1  2021-08-16       DE       00+      23          98 #> 70:     2021-08-16     1  2021-08-17       DE       00+      55          98 #> 71:     2021-08-17     1  2021-08-17       DE       00+      96         242 #> 72:     2021-08-17     1  2021-08-18       DE       00+     181         242 #> 73:     2021-08-18     1  2021-08-18       DE       00+      92         223 #> 74:     2021-08-18     1  2021-08-19       DE       00+     178         223 #> 75:     2021-08-19     1  2021-08-19       DE       00+      84         202 #> 76:     2021-08-19     1  2021-08-20       DE       00+     171         202 #> 77:     2021-08-20     1  2021-08-20       DE       00+      98         171 #> 78:     2021-08-20     1  2021-08-21       DE       00+     159         171 #> 79:     2021-08-21     1  2021-08-21       DE       00+      69         112 #> 80:     2021-08-21     1  2021-08-22       DE       00+     112         112 #> 81:     2021-08-22     1  2021-08-22       DE       00+      45          45 #>     reference_date group report_date location age_group confirm max_confirm #>     cum_prop_reported delay #>  1:        0.35593220     0 #>  2:        0.55932203     1 #>  3:        0.30555556     0 #>  4:        0.47222222     1 #>  5:        0.40579710     0 #>  6:        0.62318841     1 #>  7:        0.40425532     0 #>  8:        0.68085106     1 #>  9:        0.30769231     0 #> 10:        0.41538462     1 #> 11:        0.18000000     0 #> 12:        0.30000000     1 #> 13:        0.08333333     0 #> 14:        0.52777778     1 #> 15:        0.38297872     0 #> 16:        0.58510638     1 #> 17:        0.30769231     0 #> 18:        0.50549451     1 #> 19:        0.34343434     0 #> 20:        0.53535354     1 #> 21:        0.34883721     0 #> 22:        0.48837209     1 #> 23:        0.33333333     0 #> 24:        0.41935484     1 #> 25:        0.10810811     0 #> 26:        0.16216216     1 #> 27:        0.32142857     0 #> 28:        0.53571429     1 #> 29:        0.44871795     0 #> 30:        0.58974359     1 #> 31:        0.32692308     0 #> 32:        0.50641026     1 #> 33:        0.34814815     0 #> 34:        0.62222222     1 #> 35:        0.31578947     0 #> 36:        0.49122807     1 #> 37:        0.30158730     0 #> 38:        0.42857143     1 #> 39:        0.09090909     0 #> 40:        0.15584416     1 #> 41:        0.22033898     0 #> 42:        0.44067797     1 #> 43:        0.34228188     0 #> 44:        0.63087248     1 #> 45:        0.30722892     0 #> 46:        0.56626506     1 #> 47:        0.33834586     0 #> 48:        0.49624060     1 #> 49:        0.34306569     0 #> 50:        0.56934307     1 #> 51:        0.28776978     0 #> 52:        0.39568345     1 #> 53:        0.13402062     0 #> 54:        0.27835052     1 #> 55:        0.24137931     0 #> 56:        0.63793103     1 #> 57:        0.44571429     0 #> 58:        0.69142857     1 #> 59:        0.34334764     0 #> 60:        0.57081545     1 #> 61:        0.37552743     0 #> 62:        0.57805907     1 #> 63:        0.42156863     0 #> 64:        0.63725490     1 #> 65:        0.41798942     0 #> 66:        0.60846561     1 #> 67:        0.17600000     0 #> 68:        0.36800000     1 #> 69:        0.23469388     0 #> 70:        0.56122449     1 #> 71:        0.39669421     0 #> 72:        0.74793388     1 #> 73:        0.41255605     0 #> 74:        0.79820628     1 #> 75:        0.41584158     0 #> 76:        0.84653465     1 #> 77:        0.57309942     0 #> 78:        0.92982456     1 #> 79:        0.61607143     0 #> 80:        1.00000000     1 #> 81:        1.00000000     0 #>     cum_prop_reported delay"},{"path":"epiforecasts.io/epinowcast/reference/enw_formula.html","id":null,"dir":"Reference","previous_headings":"","what":"FUNCTION_TITLE — enw_formula","title":"FUNCTION_TITLE — enw_formula","text":"FUNCTION_DESCRIPTION","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_formula.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FUNCTION_TITLE — enw_formula","text":"","code":"enw_formula(metaobs, fixed = c(), random = c(), custom_random = c())"},{"path":"epiforecasts.io/epinowcast/reference/enw_formula.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FUNCTION_TITLE — enw_formula","text":"metaobs PARAM_DESCRIPTION fixed PARAM_DESCRIPTION. Default: c() random PARAM_DESCRIPTION. Default: c() custom_random PARAM_DESCRIPTION. Default: c()","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_formula.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FUNCTION_TITLE — enw_formula","text":"OUTPUT_DESCRIPTION","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/reference/enw_formula_as_data_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Format formula data for use with stan — enw_formula_as_data_list","title":"Format formula data for use with stan — enw_formula_as_data_list","text":"Format formula data use stan","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_formula_as_data_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format formula data for use with stan — enw_formula_as_data_list","text":"","code":"enw_formula_as_data_list(data, reference_effects, report_effects)"},{"path":"epiforecasts.io/epinowcast/reference/enw_formula_as_data_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format formula data for use with stan — enw_formula_as_data_list","text":"data list stan observation data produced enw_obs_as_data_list(). reference_effects list fixed random design matrices defining date reference model. Defaults enw_formula() intercept model. report_effects list fixed random design matrices defining date reports model. Defaults enw_formula() intercept model.","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_formula_as_data_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format formula data for use with stan — enw_formula_as_data_list","text":"list required stan.","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/reference/enw_inits.html","id":null,"dir":"Reference","previous_headings":"","what":"Set up initial conditions for model — enw_inits","title":"Set up initial conditions for model — enw_inits","text":"Set initial conditions model","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_inits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set up initial conditions for model — enw_inits","text":"","code":"enw_inits(data)"},{"path":"epiforecasts.io/epinowcast/reference/enw_inits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set up initial conditions for model — enw_inits","text":"data list data produced enw_as_data_list().","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_inits.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set up initial conditions for model — enw_inits","text":"function called returns list initial conditions package stan models.","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/reference/enw_latest_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter observations to the latest available — enw_latest_data","title":"Filter observations to the latest available — enw_latest_data","text":"Filter observations latest available","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_latest_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter observations to the latest available — enw_latest_data","text":"","code":"enw_latest_data(obs, ref_window)"},{"path":"epiforecasts.io/epinowcast/reference/enw_latest_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter observations to the latest available — enw_latest_data","text":"obs data frame containing least following variables: reference date (index date interest), report_date (report date observations). ref_window Numeric vector length 2. Can optionally used restrict reference date window referenced maximum available reference date.","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_latest_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter observations to the latest available — enw_latest_data","text":"filtered data frame variables obs.","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/reference/enw_latest_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter observations to the latest available — enw_latest_data","text":"","code":"# Filter for latest available data enw_latest_data(germany_covid19_hosp) #>        reference_date location age_group confirm #>     1:     2021-04-06       DE       00+     708 #>     2:     2021-04-06       DE     00-04      11 #>     3:     2021-04-06       DE     05-14       5 #>     4:     2021-04-06       DE     15-34      75 #>     5:     2021-04-06       DE     35-59     192 #>    ---                                           #> 23558:     2021-10-20    DE-TH     05-14       1 #> 23559:     2021-10-20    DE-TH     15-34       2 #> 23560:     2021-10-20    DE-TH     35-59       1 #> 23561:     2021-10-20    DE-TH     60-79       5 #> 23562:     2021-10-20    DE-TH       80+       5  # Restrict to a window of 40 days ignoring the most recent 10 days enw_latest_data(germany_covid19_hosp, c(50, 10)) #>       reference_date location age_group confirm #>    1:     2021-08-31       DE       00+     445 #>    2:     2021-08-31       DE     00-04      12 #>    3:     2021-08-31       DE     05-14      12 #>    4:     2021-08-31       DE     15-34      88 #>    5:     2021-08-31       DE     35-59     169 #>   ---                                           #> 4875:     2021-10-10    DE-TH     05-14       0 #> 4876:     2021-10-10    DE-TH     15-34       2 #> 4877:     2021-10-10    DE-TH     35-59       1 #> 4878:     2021-10-10    DE-TH     60-79       2 #> 4879:     2021-10-10    DE-TH       80+       3"},{"path":"epiforecasts.io/epinowcast/reference/enw_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"FUNCTION_TITLE — enw_metadata","title":"FUNCTION_TITLE — enw_metadata","text":"FUNCTION_DESCRIPTION","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FUNCTION_TITLE — enw_metadata","text":"","code":"enw_metadata(obs, target_date = \"reference_date\")"},{"path":"epiforecasts.io/epinowcast/reference/enw_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FUNCTION_TITLE — enw_metadata","text":"obs PARAM_DESCRIPTION target_date PARAM_DESCRIPTION, Default: 'reference_date'","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FUNCTION_TITLE — enw_metadata","text":"OUTPUT_DESCRIPTION","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/reference/enw_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Load and compile the nowcasting model — enw_model","title":"Load and compile the nowcasting model — enw_model","text":"Load compile nowcasting model","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load and compile the nowcasting model — enw_model","text":"","code":"enw_model(   model,   include,   compile = TRUE,   threads = FALSE,   profile = FALSE,   stanc_options = list(\"O1\"),   verbose = TRUE,   ... )"},{"path":"epiforecasts.io/epinowcast/reference/enw_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load and compile the nowcasting model — enw_model","text":"model character string indicating path model. supplied package default model used. include character string specifying path stan files include model. missing package default used. compile Logical, defaults TRUE. model loaded compiled using cmdstanr::cmdstan_model(). threads Logical, defaults FALSE. model compile support multi-thread support chain. Note requires use threads_per_chain argument model fitting using enw_sample(), epinowcast(). profile Logical, defaults FALSE. model profiled? profiling see cmdstanr documentation. # nolint stanc_options list options pass stanc_options cmdstanr::cmdstan_model(). default \"01\" passed specifies simple optimisations done prior compilation. verbose Logical, defaults TRUE. verbose messages shown. ... Additional arguments passed cmdstanr::cmdstan_model().","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load and compile the nowcasting model — enw_model","text":"cmdstanr model.","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/reference/enw_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load and compile the nowcasting model — enw_model","text":"","code":"if (FALSE) { # interactive() mod <- enw_model() }"},{"path":"epiforecasts.io/epinowcast/reference/enw_new_reports.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate incidence of new reports from cumulative reports — enw_new_reports","title":"Calculate incidence of new reports from cumulative reports — enw_new_reports","text":"Calculate incidence new reports cumulative reports","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_new_reports.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate incidence of new reports from cumulative reports — enw_new_reports","text":"","code":"enw_new_reports(obs, set_negatives_to_zero = TRUE)"},{"path":"epiforecasts.io/epinowcast/reference/enw_new_reports.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate incidence of new reports from cumulative reports — enw_new_reports","text":"obs data frame containing least following variables: reference date (index date interest), report_date (report date observations), confirm (cumulative observations reference report date), group (added enw_assign_group()). set_negatives_to_zero Logical, defaults TRUE. negative counts (calculated incidence observations) set zero. Currently downstream modelling support negative counts setting must TRUE intending use epinowcast().","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_new_reports.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate incidence of new reports from cumulative reports — enw_new_reports","text":"input data frame new variable new_confirm. max_confirm present data frame proportion reported day (prop_reported) also added.","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/reference/enw_new_reports.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate incidence of new reports from cumulative reports — enw_new_reports","text":"","code":"# Default reconstruct incidence dt <- enw_assign_group(   germany_covid19_hosp[location == \"DE\"],   by = \"age_group\" ) enw_new_reports(dt) #>        group age_group reference_date location confirm report_date new_confirm #>     1:     2     00-04     2021-04-06       DE       4  2021-04-06           4 #>     2:     2     00-04     2021-04-06       DE       6  2021-04-07           2 #>     3:     2     00-04     2021-04-06       DE       6  2021-04-08           0 #>     4:     2     00-04     2021-04-06       DE       6  2021-04-09           0 #>     5:     2     00-04     2021-04-06       DE       6  2021-04-10           0 #>    ---                                                                         #> 90401:     7       80+     2021-10-18       DE      42  2021-10-19          25 #> 90402:     7       80+     2021-10-18       DE      50  2021-10-20           8 #> 90403:     7       80+     2021-10-19       DE      70  2021-10-19          70 #> 90404:     7       80+     2021-10-19       DE     128  2021-10-20          58 #> 90405:     7       80+     2021-10-20       DE      71  2021-10-20          71 #>        delay #>     1:     0 #>     2:     1 #>     3:     2 #>     4:     3 #>     5:     4 #>    ---       #> 90401:     1 #> 90402:     2 #> 90403:     0 #> 90404:     1 #> 90405:     0  # Make use of maximum reported to calculate empirical daily reporting dt <- enw_add_max_reported(dt) enw_new_reports(dt) #>        group age_group reference_date location confirm report_date max_confirm #>     1:     2     00-04     2021-04-06       DE       4  2021-04-06          11 #>     2:     2     00-04     2021-04-06       DE       6  2021-04-07          11 #>     3:     2     00-04     2021-04-06       DE       6  2021-04-08          11 #>     4:     2     00-04     2021-04-06       DE       6  2021-04-09          11 #>     5:     2     00-04     2021-04-06       DE       6  2021-04-10          11 #>    ---                                                                         #> 90401:     7       80+     2021-10-18       DE      42  2021-10-19          50 #> 90402:     7       80+     2021-10-18       DE      50  2021-10-20          50 #> 90403:     7       80+     2021-10-19       DE      70  2021-10-19         128 #> 90404:     7       80+     2021-10-19       DE     128  2021-10-20         128 #> 90405:     7       80+     2021-10-20       DE      71  2021-10-20          71 #>        cum_prop_reported new_confirm delay prop_reported #>     1:         0.3636364           4     0     0.3636364 #>     2:         0.5454545           2     1     0.1818182 #>     3:         0.5454545           0     2     0.0000000 #>     4:         0.5454545           0     3     0.0000000 #>     5:         0.5454545           0     4     0.0000000 #>    ---                                                   #> 90401:         0.8400000          25     1     0.5000000 #> 90402:         1.0000000           8     2     0.1600000 #> 90403:         0.5468750          70     0     0.5468750 #> 90404:         1.0000000          58     1     0.4531250 #> 90405:         1.0000000          71     0     1.0000000"},{"path":"epiforecasts.io/epinowcast/reference/enw_nowcast_samples.html","id":null,"dir":"Reference","previous_headings":"","what":"FUNCTION_TITLE — enw_nowcast_samples","title":"FUNCTION_TITLE — enw_nowcast_samples","text":"FUNCTION_DESCRIPTION","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_nowcast_samples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FUNCTION_TITLE — enw_nowcast_samples","text":"","code":"enw_nowcast_samples(fit, obs)"},{"path":"epiforecasts.io/epinowcast/reference/enw_nowcast_samples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FUNCTION_TITLE — enw_nowcast_samples","text":"fit PARAM_DESCRIPTION obs PARAM_DESCRIPTION","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_nowcast_samples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FUNCTION_TITLE — enw_nowcast_samples","text":"OUTPUT_DESCRIPTION","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/reference/enw_nowcast_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"FUNCTION_TITLE — enw_nowcast_summary","title":"FUNCTION_TITLE — enw_nowcast_summary","text":"FUNCTION_DESCRIPTION","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_nowcast_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FUNCTION_TITLE — enw_nowcast_summary","text":"","code":"enw_nowcast_summary(fit, obs, probs = c(0.05, 0.2, 0.35, 0.5, 0.65, 0.8, 0.95))"},{"path":"epiforecasts.io/epinowcast/reference/enw_nowcast_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FUNCTION_TITLE — enw_nowcast_summary","text":"fit PARAM_DESCRIPTION obs PARAM_DESCRIPTION probs PARAM_DESCRIPTION, Default: c(0.05, 0.2, 0.35, 0.5, 0.65, 0.8, 0.95)","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_nowcast_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FUNCTION_TITLE — enw_nowcast_summary","text":"OUTPUT_DESCRIPTION","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/reference/enw_obs_as_data_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Format observed data for use with stan — enw_obs_as_data_list","title":"Format observed data for use with stan — enw_obs_as_data_list","text":"Format observed data use stan","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_obs_as_data_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format observed data for use with stan — enw_obs_as_data_list","text":"","code":"enw_obs_as_data_list(pobs)"},{"path":"epiforecasts.io/epinowcast/reference/enw_obs_as_data_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format observed data for use with stan — enw_obs_as_data_list","text":"pobs Output enw_preprocess_data().","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_obs_as_data_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format observed data for use with stan — enw_obs_as_data_list","text":"list required stan.","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/reference/enw_opts_as_data_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Format model options for use with stan — enw_opts_as_data_list","title":"Format model options for use with stan — enw_opts_as_data_list","text":"Format model options use stan","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_opts_as_data_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format model options for use with stan — enw_opts_as_data_list","text":"","code":"enw_opts_as_data_list(   distribution = \"lognormal\",   nowcast = TRUE,   pp = FALSE,   likelihood = TRUE,   debug = FALSE,   output_loglik = FALSE )"},{"path":"epiforecasts.io/epinowcast/reference/enw_opts_as_data_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format model options for use with stan — enw_opts_as_data_list","text":"distribution Character string indicating type distribution use reference date effects. default use lognormal options available include: gamma distributed (\"gamma\"). nowcast Logical, defaults TRUE. nowcast made using posterior predictions unobserved future reported notifications. pp Logical, defaults FALSE. posterior predictions made observed data. Useful evaluating performance model. likelihood Logical, defaults TRUE. likelihood included model debug Logical, defaults FALSE. within model debug information returned. output_loglik Logical, defaults FALSE. log-likelihood output. Disabling speed fitting evaluating model fit required.","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_opts_as_data_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format model options for use with stan — enw_opts_as_data_list","text":"list required stan.","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/reference/enw_plot_nowcast_quantiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot nowcast quantiles — enw_plot_nowcast_quantiles","title":"Plot nowcast quantiles — enw_plot_nowcast_quantiles","text":"Plot nowcast quantiles","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_plot_nowcast_quantiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot nowcast quantiles — enw_plot_nowcast_quantiles","text":"","code":"enw_plot_nowcast_quantiles(nowcast, latest_obs = NULL, log = FALSE, ...)"},{"path":"epiforecasts.io/epinowcast/reference/enw_plot_nowcast_quantiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot nowcast quantiles — enw_plot_nowcast_quantiles","text":"nowcast data.frame summarised posterior nowcast estimates containing least confirm count column reference_date date variable. latest_obs data frame observed data containing least confirm count variable date variable main data.frame used plotting. log Logical, defaults FALSE. counts plot log scale. ... Additional arguments passed enw_plot_pp_quantiles().","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_plot_nowcast_quantiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot nowcast quantiles — enw_plot_nowcast_quantiles","text":"ggplot2 plot.","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/reference/enw_plot_obs.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic quantile plot — enw_plot_obs","title":"Generic quantile plot — enw_plot_obs","text":"Generic quantile plot","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_plot_obs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic quantile plot — enw_plot_obs","text":"","code":"enw_plot_obs(obs, latest_obs = NULL, log = TRUE, ...)"},{"path":"epiforecasts.io/epinowcast/reference/enw_plot_obs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic quantile plot — enw_plot_obs","text":"obs data.frame summarised posterior estimates containing least confirm count column date variable latest_obs data frame observed data containing least confirm count variable date variable main data.frame used plotting. log Logical, defaults FALSE. counts plot log scale. ... Additional arguments passed ggplot2::aes() must least specify x date variable.","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_plot_obs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic quantile plot — enw_plot_obs","text":"ggplot2 plot.","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/reference/enw_plot_pp_quantiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot posterior prediction quantiles — enw_plot_pp_quantiles","title":"Plot posterior prediction quantiles — enw_plot_pp_quantiles","text":"Plot posterior prediction quantiles","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_plot_pp_quantiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot posterior prediction quantiles — enw_plot_pp_quantiles","text":"","code":"enw_plot_pp_quantiles(pp, log = FALSE, ...)"},{"path":"epiforecasts.io/epinowcast/reference/enw_plot_pp_quantiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot posterior prediction quantiles — enw_plot_pp_quantiles","text":"pp data.frame summarised posterior predictions estimates containing least confirm count column report_date date variable. log Logical, defaults FALSE. counts plot log scale. ... Additional arguments passed enw_plot_pp_quantiles().","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_plot_pp_quantiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot posterior prediction quantiles — enw_plot_pp_quantiles","text":"ggplot2 plot.","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/reference/enw_plot_quantiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic quantile plot — enw_plot_quantiles","title":"Generic quantile plot — enw_plot_quantiles","text":"Generic quantile plot","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_plot_quantiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic quantile plot — enw_plot_quantiles","text":"","code":"enw_plot_quantiles(posterior, latest_obs = NULL, log = TRUE, ...)"},{"path":"epiforecasts.io/epinowcast/reference/enw_plot_quantiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic quantile plot — enw_plot_quantiles","text":"posterior data.frame summarised posterior estimates containing least confirm count column date variable, quantile estimates 5%, 20%, 80%, 95% quantiles mean median. latest_obs data frame observed data containing least confirm count variable date variable main data.frame used plotting. log Logical, defaults FALSE. counts plot log scale. ... Additional arguments passed ggplot2::aes() must least specify x date variable.","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_plot_quantiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic quantile plot — enw_plot_quantiles","text":"ggplot2 plot.","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/reference/enw_plot_theme.html","id":null,"dir":"Reference","previous_headings":"","what":"Package plot theme — enw_plot_theme","title":"Package plot theme — enw_plot_theme","text":"Package plot theme","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_plot_theme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Package plot theme — enw_plot_theme","text":"","code":"enw_plot_theme(plot)"},{"path":"epiforecasts.io/epinowcast/reference/enw_plot_theme.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Package plot theme — enw_plot_theme","text":"plot ggplot2 plot object.","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_plot_theme.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Package plot theme — enw_plot_theme","text":"ggplot2 plot object.","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/reference/enw_posterior.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise the posterior — enw_posterior","title":"Summarise the posterior — enw_posterior","text":"generic wrapper around posterior::summarise_draws() opinionated defaults.","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_posterior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise the posterior — enw_posterior","text":"","code":"enw_posterior(fit, variables = NULL, probs = c(0.05, 0.2, 0.8, 0.95), ...)"},{"path":"epiforecasts.io/epinowcast/reference/enw_posterior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise the posterior — enw_posterior","text":"fit cmdstanr fit object. variables character vector variables return posterior summaries . default summaries parameters returned. probs vector numeric probabilities produce quantile summaries . default 5%, 20%, 80%, 95% quantiles also minimum set required plotting functions work. ... Additional arguments may passed used.","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_posterior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise the posterior — enw_posterior","text":"dataframe summarising model posterior.","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/reference/enw_posterior_as_prior.html","id":null,"dir":"Reference","previous_headings":"","what":"FUNCTION_TITLE — enw_posterior_as_prior","title":"FUNCTION_TITLE — enw_posterior_as_prior","text":"FUNCTION_DESCRIPTION","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_posterior_as_prior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FUNCTION_TITLE — enw_posterior_as_prior","text":"","code":"enw_posterior_as_prior(   nowcast,   priors = epinowcast::enw_priors(),   variables = c(),   scale = 5 )"},{"path":"epiforecasts.io/epinowcast/reference/enw_posterior_as_prior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FUNCTION_TITLE — enw_posterior_as_prior","text":"nowcast DESCRIPTION priors DESCRIPTION. variables character vector variables posterior default priors. scale DESCRIPTION","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_posterior_as_prior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FUNCTION_TITLE — enw_posterior_as_prior","text":"RETURN_DESCRIPTION","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/reference/enw_pp_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"FUNCTION_TITLE — enw_pp_summary","title":"FUNCTION_TITLE — enw_pp_summary","text":"FUNCTION_DESCRIPTION","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_pp_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FUNCTION_TITLE — enw_pp_summary","text":"","code":"enw_pp_summary(fit, diff_obs, probs = c(0.05, 0.2, 0.35, 0.5, 0.65, 0.8, 0.95))"},{"path":"epiforecasts.io/epinowcast/reference/enw_pp_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FUNCTION_TITLE — enw_pp_summary","text":"fit PARAM_DESCRIPTION diff_obs PARAM_DESCRIPTION probs PARAM_DESCRIPTION, Default: c(0.05, 0.2, 0.35, 0.5, 0.65, 0.8, 0.95)","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_pp_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FUNCTION_TITLE — enw_pp_summary","text":"OUTPUT_DESCRIPTION","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/reference/enw_preprocess_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Preprocess observations — enw_preprocess_data","title":"Preprocess observations — enw_preprocess_data","text":"function preprocesses raw observations assumption reported cumulative counts reference report date used assign groups. also constructs data objects used visualisation modelling functions including observed empirical probability report given day, cumulative probability report, latest available observations, incidence observations, metadata date reference report (used construct models). function wraps preprocessing functions may instead used individually required.","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_preprocess_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preprocess observations — enw_preprocess_data","text":"","code":"enw_preprocess_data(   obs,   by = c(),   max_delay = 20,   max_delay_strat = \"add_to_max_delay\",   holidays = c(),   set_negatives_to_zero = TRUE )"},{"path":"epiforecasts.io/epinowcast/reference/enw_preprocess_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preprocess observations — enw_preprocess_data","text":"obs data frame containing least following variables: reference date (index date interest), report_date (report date observations), confirm (cumulative observations reference report date). character vector describing stratification observations. defaults grouping. used modelling multiple time series order identify downstream modelling max_delay Numeric defaults 20. maximum number days include delay distribution. Computation scales non-linearly setting consider maximum makes sense data carefully. max_delay_strat Character string indicating handle reported cases beyond specified maximum delay. Options include: excluding (\"exclude\") adding maximum delay (\"add_to_max_delay\"). Adding maximum delay default. Compare confirm, max_confirm, prop_reported columns understand impact assumption. holidays vector dates indicating holidays occur used enw_add_metaobs_features() treat holidays sundays within day_of_week variable creates internally. set_negatives_to_zero Logical, defaults TRUE. negative counts (calculated incidence observations) set zero. Currently downstream modelling support negative counts setting must TRUE intending use epinowcast().","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_preprocess_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preprocess observations — enw_preprocess_data","text":"data.table containing processed observations series nested data frames well variables containing metadata. : obs: (observations addition empirical reporting proportions restricted specified maximum delay). new_confirm: Incidence notifications reference report date. Empirical reporting distributions also added. latest: latest available observations. reporting_triangle: Incident observations report reference date standard reporting triangle matrix format. metareference: Metadata reference dates derived observations. metrareport: Metadata report dates. time: Numeric, number timepoints data. snapshots: Numeric, number available data snapshots use nowcasting. groups: Numeric, Number groups/strata supplied observations (set using ). max_delay: Numeric, maximum delay processed data max_date: maximum available report date.","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/reference/enw_preprocess_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Preprocess observations — enw_preprocess_data","text":"","code":"library(data.table)  # Filter example hospitalisation data to be natioanl and over all ages nat_germany_hosp <- germany_covid19_hosp[location == \"DE\"] nat_germany_hosp <- nat_germany_hosp[age_group %in% \"00+\"]  # Preprocess with default settings pobs <- enw_preprocess_data(nat_germany_hosp) pobs #>                     obs           new_confirm              latest #> 1: <data.table[3770x9]> <data.table[3770x11]> <data.table[198x8]> #>      reporting_triangle        metareference           metareport time #> 1: <data.table[198x22]> <data.table[198x10]> <data.table[217x11]>  198 #>    snapshots groups max_delay   max_date #> 1:       198      1        20 2021-10-20  # Preprocess using exclusion beyond the maximum delay and a max delay of 10 pobs_exclude <- enw_preprocess_data(   nat_germany_hosp,   max_delay = 10, max_delay_strat = \"exclude\" ) pobs_exclude #>                     obs           new_confirm              latest #> 1: <data.table[1935x9]> <data.table[1935x11]> <data.table[198x8]> #>      reporting_triangle        metareference           metareport time #> 1: <data.table[198x12]> <data.table[198x10]> <data.table[207x11]>  198 #>    snapshots groups max_delay   max_date #> 1:       198      1        10 2021-10-20  # Preprocess all data pobs_all <- enw_preprocess_data(   germany_covid19_hosp,   by = c(\"location\", \"age_group\") ) pobs_all #>                       obs             new_confirm                latest #> 1: <data.table[448630x9]> <data.table[448630x11]> <data.table[23562x8]> #>        reporting_triangle          metareference             metareport time #> 1: <data.table[23562x22]> <data.table[23562x10]> <data.table[25823x11]>  198 #>    snapshots groups max_delay   max_date #> 1:     23562    119        20 2021-10-20"},{"path":"epiforecasts.io/epinowcast/reference/enw_priors.html","id":null,"dir":"Reference","previous_headings":"","what":"FUNCTION_TITLE — enw_priors","title":"FUNCTION_TITLE — enw_priors","text":"FUNCTION_DESCRIPTION","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_priors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FUNCTION_TITLE — enw_priors","text":"","code":"enw_priors()"},{"path":"epiforecasts.io/epinowcast/reference/enw_priors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FUNCTION_TITLE — enw_priors","text":"RETURN_DESCRIPTION","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/reference/enw_priors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FUNCTION_TITLE — enw_priors","text":"","code":"enw_priors() #>       variable                                             description #> 1:    eobs_lsd      Standard deviation for expected final observations #> 2: logmean_int             Log mean intercept for reference date delay #> 3:   logsd_int     Log standard deviation for the reference date delay #> 4:  logmean_sd     Standard deviation of scaled pooled logmean effects #> 5:    logsd_sd       Standard deviation of scaled pooled logsd effects #> 6:   rd_eff_sd Standard deviation of scaled pooled report date effects #> 7:    sqrt_phi     One over the square of the reporting overdispersion #>             distribution mean sd #> 1: Zero truncated normal  0.0  1 #> 2:                Normal  1.0  1 #> 3: Zero truncated normal  0.5  1 #> 4: Zero truncated normal  0.0  1 #> 5: Zero truncated normal  0.0  1 #> 6: Zero truncated normal  0.0  1 #> 7: Zero truncated normal  0.0  1"},{"path":"epiforecasts.io/epinowcast/reference/enw_priors_as_data_list.html","id":null,"dir":"Reference","previous_headings":"","what":"FUNCTION_TITLE — enw_priors_as_data_list","title":"FUNCTION_TITLE — enw_priors_as_data_list","text":"FUNCTION_DESCRIPTION","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_priors_as_data_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FUNCTION_TITLE — enw_priors_as_data_list","text":"","code":"enw_priors_as_data_list(priors)"},{"path":"epiforecasts.io/epinowcast/reference/enw_priors_as_data_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FUNCTION_TITLE — enw_priors_as_data_list","text":"priors DESCRIPTION.","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_priors_as_data_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FUNCTION_TITLE — enw_priors_as_data_list","text":"RETURN_DESCRIPTION","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/reference/enw_priors_as_data_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FUNCTION_TITLE — enw_priors_as_data_list","text":"","code":"priors <- enw_priors() enw_priors_as_data_list(priors) #> $eobs_lsd_p #> [1] 0 1 #>  #> $logmean_int_p #> [1] 1 1 #>  #> $logsd_int_p #> [1] 0.5 1.0 #>  #> $logmean_sd_p #> [1] 0 1 #>  #> $logsd_sd_p #> [1] 0 1 #>  #> $rd_eff_sd_p #> [1] 0 1 #>  #> $sqrt_phi_p #> [1] 0 1 #>"},{"path":"epiforecasts.io/epinowcast/reference/enw_quantiles_to_long.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert summarised quantiles from wide to long format — enw_quantiles_to_long","title":"Convert summarised quantiles from wide to long format — enw_quantiles_to_long","text":"Convert summarised quantiles wide long format","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_quantiles_to_long.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert summarised quantiles from wide to long format — enw_quantiles_to_long","text":"","code":"enw_quantiles_to_long(posterior)"},{"path":"epiforecasts.io/epinowcast/reference/enw_quantiles_to_long.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert summarised quantiles from wide to long format — enw_quantiles_to_long","text":"posterior dataframe output enw_posterior().","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_quantiles_to_long.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert summarised quantiles from wide to long format — enw_quantiles_to_long","text":"data frame quantiles long format.","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/reference/enw_reporting_triangle.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct the reporting triangle — enw_reporting_triangle","title":"Construct the reporting triangle — enw_reporting_triangle","text":"Constructs reporting triangle row representing reference date columns observations report date","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_reporting_triangle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct the reporting triangle — enw_reporting_triangle","text":"","code":"enw_reporting_triangle(obs)"},{"path":"epiforecasts.io/epinowcast/reference/enw_reporting_triangle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct the reporting triangle — enw_reporting_triangle","text":"obs data frame produced enw_new_reports(). Must contain following variables: reference_date, group, delay.","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_reporting_triangle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct the reporting triangle — enw_reporting_triangle","text":"data frame row reference date, columns observations reporting delay.","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/reference/enw_reporting_triangle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct the reporting triangle — enw_reporting_triangle","text":"","code":"obs <- enw_example(\"preprocessed\")$new_confirm enw_reporting_triangle(obs) #>     group reference_date  0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 #>  1:     1     2021-07-13 21 12  3  4  3  0  1  2  4  3  0  0  2  0  0  0  1  2 #>  2:     1     2021-07-14 22 12  4  5  0  1 10  2  5  3  0  1  0  3  1  0  1  0 #>  3:     1     2021-07-15 28 15  3  3  0  1  3  2  3  2  1  0  2  3  0  3  0  0 #>  4:     1     2021-07-16 19 13  0  0  0  4  2  2  2  1  1  1  0  1  0  0  1  0 #>  5:     1     2021-07-17 20  7  1  3 10  3  0  4  3  3  2  0  1  2  0  1  2  1 #>  6:     1     2021-07-18  9  6  6  0  4  5  4  0  1  4  0  0  1  1  1  2  0  0 #>  7:     1     2021-07-19  3 16  4  4  1  1  2  0  0  0  0  1  1  1  1  0  0  0 #>  8:     1     2021-07-20 36 19 10  4  2  3  0  3  2  3  0  2  1  1  2  2  0  0 #>  9:     1     2021-07-21 28 18  8  4  1  2  3  6  1  5  2  2  3  0  2  0  1  0 #> 10:     1     2021-07-22 34 19  2  1  5  2  4  3  7  3  1  0  4  3  3  1  2  0 #> 11:     1     2021-07-23 30 12  4  1 10  6  0  2  2  1  2  1  4  0  2  3  0  0 #> 12:     1     2021-07-24 31  8  4  9  8  2  5  2  1  1  2  4  1  3  1  0  1  2 #> 13:     1     2021-07-25  8  4 14  8  6  5  1  3  0  4  1  2  4  2  0  1  2  2 #> 14:     1     2021-07-26  9  6  2  3  0  0  0  0  1  2  4  1  0  0  0  0  0  0 #> 15:     1     2021-07-27 35 11  6  4  4  1  0  2  2  2  2  0  0  1  4  1  0  0 #> 16:     1     2021-07-28 51 28 25  3  5  2  3  5  5  7  1  0  0  4  5  5  1  1 #> 17:     1     2021-07-29 47 37  9  2  2  3  4  4  4  3  0  2  0 10  4  3  0  0 #> 18:     1     2021-07-30 36 20  2  4 11  8  8  3  5  2  0  2  4  4  0  2  2  0 #> 19:     1     2021-07-31 38 16  3 15 14  7  5  5  0  0  5  0  5  1  6  0  0  3 #> 20:     1     2021-08-01  7  5  5 11  7  5  1  3  1  6  3  3  4  1  1  7  2  3 #> 21:     1     2021-08-02 13 13  8  6  1  3  2  0  0  2  0  2  0  5  3  0  0  0 #> 22:     1     2021-08-03 51 43  6  4  4  3  1  6  4  5  5  4  0  4  5  0  2  2 #> 23:     1     2021-08-04 51 43 18  5  6  1  2  8  7  7  6  1  0  4  3  1  3  0 #> 24:     1     2021-08-05 45 21  6  2  2 11 17  5  7  4  1  0  5  3  0  2  2  0 #> 25:     1     2021-08-06 47 31  5  4 20  6  1  9  3  1  0  2  1  5  2  0  0  0 #> 26:     1     2021-08-07 40 15  6 23 14 13  8  9  0  1  3  3  2  0  1  1  0  0 #> 27:     1     2021-08-08 13 14 27 14  7  7  0  0  0  7  1  4  2  1  0  0  0  0 #> 28:     1     2021-08-09 14 23 11  3  1  1  0  0  0  1  0  2  2  0  0  0  0  0 #> 29:     1     2021-08-10 78 43 23 11  5  1  0  5  2  2  1  4  0  0  0  0  0  0 #> 30:     1     2021-08-11 80 53 17 15  7  3 14 12 13 13  6  0  0  0  0  0  0  0 #> 31:     1     2021-08-12 89 48 28  8  1 14 13 13 10 12  1  0  0  0  0  0  0  0 #> 32:     1     2021-08-13 86 44  9  3 27 13  7 11  4  0  0  0  0  0  0  0  0  0 #> 33:     1     2021-08-14 79 36  7 16 19 13  8  8  3  0  0  0  0  0  0  0  0  0 #> 34:     1     2021-08-15 22 24 35 18 10  4  7  5  0  0  0  0  0  0  0  0  0  0 #> 35:     1     2021-08-16 23 32 22 10  8  2  1  0  0  0  0  0  0  0  0  0  0  0 #> 36:     1     2021-08-17 96 85 30 18 10  3  0  0  0  0  0  0  0  0  0  0  0  0 #> 37:     1     2021-08-18 92 86 23 18  4  0  0  0  0  0  0  0  0  0  0  0  0  0 #> 38:     1     2021-08-19 84 87 27  4  0  0  0  0  0  0  0  0  0  0  0  0  0  0 #> 39:     1     2021-08-20 98 61 12  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 #> 40:     1     2021-08-21 69 43  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 #> 41:     1     2021-08-22 45  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 #>     group reference_date  0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 #>     18 19 #>  1:  1  0 #>  2:  0  2 #>  3:  0  0 #>  4:  0  0 #>  5:  0  2 #>  6:  0  6 #>  7:  1  0 #>  8:  1  3 #>  9:  0  5 #> 10:  0  5 #> 11:  4  2 #> 12:  2  6 #> 13:  2  5 #> 14:  0  0 #> 15:  0  3 #> 16:  0  5 #> 17:  0  1 #> 18:  0  1 #> 19:  1  2 #> 20:  2  0 #> 21:  0  1 #> 22:  0  0 #> 23:  0  0 #> 24:  0  0 #> 25:  0  0 #> 26:  0  0 #> 27:  0  0 #> 28:  0  0 #> 29:  0  0 #> 30:  0  0 #> 31:  0  0 #> 32:  0  0 #> 33:  0  0 #> 34:  0  0 #> 35:  0  0 #> 36:  0  0 #> 37:  0  0 #> 38:  0  0 #> 39:  0  0 #> 40:  0  0 #> 41:  0  0 #>     18 19"},{"path":"epiforecasts.io/epinowcast/reference/enw_reporting_triangle_to_long.html","id":null,"dir":"Reference","previous_headings":"","what":"Recast the reporting triangle from wide to long format — enw_reporting_triangle_to_long","title":"Recast the reporting triangle from wide to long format — enw_reporting_triangle_to_long","text":"Recast reporting triangle wide long format","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_reporting_triangle_to_long.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recast the reporting triangle from wide to long format — enw_reporting_triangle_to_long","text":"","code":"enw_reporting_triangle_to_long(obs)"},{"path":"epiforecasts.io/epinowcast/reference/enw_reporting_triangle_to_long.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recast the reporting triangle from wide to long format — enw_reporting_triangle_to_long","text":"obs dataframe format produced enw_reporting_triangle().","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_reporting_triangle_to_long.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recast the reporting triangle from wide to long format — enw_reporting_triangle_to_long","text":"long format reporting triangle data frame additional variables new_confirm delay.","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/reference/enw_reporting_triangle_to_long.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Recast the reporting triangle from wide to long format — enw_reporting_triangle_to_long","text":"","code":"obs <- enw_example(\"preprocessed\")$new_confirm rt <- enw_reporting_triangle(obs) enw_reporting_triangle_to_long(rt) #>      reference_date group delay new_confirm #>   1:     2021-07-13     1     0          21 #>   2:     2021-07-13     1     1          12 #>   3:     2021-07-13     1     2           3 #>   4:     2021-07-13     1     3           4 #>   5:     2021-07-13     1     4           3 #>  ---                                        #> 816:     2021-08-22     1    15           0 #> 817:     2021-08-22     1    16           0 #> 818:     2021-08-22     1    17           0 #> 819:     2021-08-22     1    18           0 #> 820:     2021-08-22     1    19           0"},{"path":"epiforecasts.io/epinowcast/reference/enw_retrospective_data.html","id":null,"dir":"Reference","previous_headings":"","what":"FUNCTION_TITLE — enw_retrospective_data","title":"FUNCTION_TITLE — enw_retrospective_data","text":"FUNCTION_DESCRIPTION","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_retrospective_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FUNCTION_TITLE — enw_retrospective_data","text":"","code":"enw_retrospective_data(obs, rep_date, rep_days, ref_date, ref_days)"},{"path":"epiforecasts.io/epinowcast/reference/enw_retrospective_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FUNCTION_TITLE — enw_retrospective_data","text":"obs PARAM_DESCRIPTION rep_date PARAM_DESCRIPTION rep_days PARAM_DESCRIPTION ref_date PARAM_DESCRIPTION ref_days PARAM_DESCRIPTION","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_retrospective_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FUNCTION_TITLE — enw_retrospective_data","text":"OUTPUT_DESCRIPTION","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/reference/enw_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a CmdStan model using NUTS — enw_sample","title":"Fit a CmdStan model using NUTS — enw_sample","text":"Fit CmdStan model using NUTS","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a CmdStan model using NUTS — enw_sample","text":"","code":"enw_sample(data, model = epinowcast::enw_model(), diagnostics = TRUE, ...)"},{"path":"epiforecasts.io/epinowcast/reference/enw_sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a CmdStan model using NUTS — enw_sample","text":"data list data produced enw_as_data_list(). model cmdstanr model object loaded enw_model(). diagnostics Logical, defaults TRUE. fitting diagnostics returned data.frame. ... Additional parameters passed sample method cmdstanr.","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_sample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit a CmdStan model using NUTS — enw_sample","text":"data.frame containing cmdstanr fit, input data, fitting arguments, optionally summary diagnostics.","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/reference/enw_score_nowcast.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate nowcasts using proper scoring rules — enw_score_nowcast","title":"Evaluate nowcasts using proper scoring rules — enw_score_nowcast","text":"Acts wrapper scoringutils::score(). particular, handling filtering nowcast summary output linking output observed data. See documentation scoringutils package forecast scoring.","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_score_nowcast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate nowcasts using proper scoring rules — enw_score_nowcast","text":"","code":"enw_score_nowcast(   nowcast,   latest_obs,   log = FALSE,   check = FALSE,   round_to = 3,   ... )"},{"path":"epiforecasts.io/epinowcast/reference/enw_score_nowcast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate nowcasts using proper scoring rules — enw_score_nowcast","text":"nowcast posterior nowcast posterior prediction returned summary.epinowcast(), used output epinowcast(). latest_obs data frame latest available observations produced enw_latest_data() otherwise. log Logical, defaults FALSE. scores calculated log scale (0.01 shift) observations nowcasts. Scoring way can thought relative score vs usual absolute measure. may useful targets different scales forecaster interested good round performance versus good performance targets large values. check Logical, defaults FALSE. scoringutils::check_forecasts() used check input nowcasts. round_to Integer defaults 3. Number digits round scoring output . ... Additional arguments passed scoringutils::score().","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_score_nowcast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate nowcasts using proper scoring rules — enw_score_nowcast","text":"data.table returned scoringutils::score().","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_score_nowcast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluate nowcasts using proper scoring rules — enw_score_nowcast","text":"","code":"if (FALSE) { # interactive() library(data.table) library(scoringutils)  # Summarise example nowcast nowcast <- enw_example(\"nowcast\") summarised_nowcast <- summary(nowcast)  # Load latest available observations obs <- enw_example(\"observations\")  # Keep the last 7 days of data obs <- obs[reference_date > (max(reference_date) - 7)]  # score on the absolute scale scores <- enw_score_nowcast(summarised_nowcast, obs) summarise_scores(scores, by = \"location\")  # score overall on a log scale log_scores <- enw_score_nowcast(summarised_nowcast, obs, log = TRUE) summarise_scores(log_scores, by = \"location\") }"},{"path":"epiforecasts.io/epinowcast/reference/enw_summarise_samples.html","id":null,"dir":"Reference","previous_headings":"","what":"FUNCTION_TITLE — enw_summarise_samples","title":"FUNCTION_TITLE — enw_summarise_samples","text":"FUNCTION_DESCRIPTION","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_summarise_samples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FUNCTION_TITLE — enw_summarise_samples","text":"","code":"enw_summarise_samples(   samples,   probs = c(0.05, 0.2, 0.35, 0.5, 0.65, 0.8, 0.95),   by = c(\"reference_date\", \"group\") )"},{"path":"epiforecasts.io/epinowcast/reference/enw_summarise_samples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FUNCTION_TITLE — enw_summarise_samples","text":"samples DESCRIPTION. probs PARAM_DESCRIPTION, Default: c(0.05, 0.2, 0.35, 0.5, 0.65, 0.8, 0.95) DESCRIPTION","code":""},{"path":"epiforecasts.io/epinowcast/reference/enw_summarise_samples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FUNCTION_TITLE — enw_summarise_samples","text":"RETURN_DESCRIPTION","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/reference/epinowcast.html","id":null,"dir":"Reference","previous_headings":"","what":"Nowcast right censored data — epinowcast","title":"Nowcast right censored data — epinowcast","text":"Provides user friendly interface around package functionality produce nowcast observed preprocessed data, reference model, report model.","code":""},{"path":"epiforecasts.io/epinowcast/reference/epinowcast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Nowcast right censored data — epinowcast","text":"","code":"epinowcast(   pobs,   reference_effects = epinowcast::enw_formula(pobs$metareference[[1]]),   report_effects = epinowcast::enw_formula(pobs$metareport[[1]]),   priors = epinowcast::enw_priors(),   distribution = \"lognormal\",   model = epinowcast::enw_model(),   as_data_list = epinowcast::enw_as_data_list,   inits = epinowcast::enw_inits,   fit = epinowcast::enw_sample,   nowcast = TRUE,   pp = FALSE,   likelihood = TRUE,   debug = FALSE,   output_loglik = FALSE,   ... )"},{"path":"epiforecasts.io/epinowcast/reference/epinowcast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Nowcast right censored data — epinowcast","text":"pobs Output enw_preprocess_data(). reference_effects list fixed random design matrices defining date reference model. Defaults enw_formula() intercept model. report_effects list fixed random design matrices defining date reports model. Defaults enw_formula() intercept model. priors DESCRIPTION. distribution Character string indicating type distribution use reference date effects. default use lognormal options available include: gamma distributed (\"gamma\"). model cmdstanr model object loaded enw_model(). as_data_list PARAM_DESCRIPTION inits PARAM DESCRIPTION fit PARAM DESCRIPTION nowcast Logical, defaults TRUE. nowcast made using posterior predictions unobserved future reported notifications. pp Logical, defaults FALSE. posterior predictions made observed data. Useful evaluating performance model. likelihood Logical, defaults TRUE. likelihood included model debug Logical, defaults FALSE. within model debug information returned. output_loglik Logical, defaults FALSE. log-likelihood output. Disabling speed fitting evaluating model fit required. ... Additional arguments passed enw_sample().","code":""},{"path":"epiforecasts.io/epinowcast/reference/epinowcast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Nowcast right censored data — epinowcast","text":"OUTPUT_DESCRIPTION","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/reference/expose_stan_fns.html","id":null,"dir":"Reference","previous_headings":"","what":"FUNCTION_TITLE — expose_stan_fns","title":"FUNCTION_TITLE — expose_stan_fns","text":"FUNCTION_DESCRIPTION","code":""},{"path":"epiforecasts.io/epinowcast/reference/expose_stan_fns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FUNCTION_TITLE — expose_stan_fns","text":"","code":"expose_stan_fns(files, target_dir, ...)"},{"path":"epiforecasts.io/epinowcast/reference/expose_stan_fns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FUNCTION_TITLE — expose_stan_fns","text":"files PARAM_DESCRIPTION target_dir PARAM_DESCRIPTION ... PARAM_DESCRIPTION","code":""},{"path":"epiforecasts.io/epinowcast/reference/expose_stan_fns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FUNCTION_TITLE — expose_stan_fns","text":"OUTPUT_DESCRIPTION","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/reference/germany_covid19_hosp.html","id":null,"dir":"Reference","previous_headings":"","what":"Hospitalisations in Germany by date of report and reference — germany_covid19_hosp","title":"Hospitalisations in Germany by date of report and reference — germany_covid19_hosp","text":"Hospitalisations Germany date report reference","code":""},{"path":"epiforecasts.io/epinowcast/reference/germany_covid19_hosp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hospitalisations in Germany by date of report and reference — germany_covid19_hosp","text":"","code":"germany_covid19_hosp"},{"path":"epiforecasts.io/epinowcast/reference/germany_covid19_hosp.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Hospitalisations in Germany by date of report and reference — germany_covid19_hosp","text":"object class data.table (inherits data.frame) 1536885 rows 5 columns.","code":""},{"path":"epiforecasts.io/epinowcast/reference/germany_covid19_hosp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hospitalisations in Germany by date of report and reference — germany_covid19_hosp","text":"data.table","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/reference/is.Date.html","id":null,"dir":"Reference","previous_headings":"","what":"FUNCTION_TITLE — is.Date","title":"FUNCTION_TITLE — is.Date","text":"FUNCTION_DESCRIPTION","code":""},{"path":"epiforecasts.io/epinowcast/reference/is.Date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FUNCTION_TITLE — is.Date","text":"","code":"is.Date(x)"},{"path":"epiforecasts.io/epinowcast/reference/is.Date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FUNCTION_TITLE — is.Date","text":"x PARAM_DESCRIPTION","code":""},{"path":"epiforecasts.io/epinowcast/reference/is.Date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FUNCTION_TITLE — is.Date","text":"OUTPUT_DESCRIPTION","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/reference/plot.epinowcast.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot method for epinowcast — plot.epinowcast","title":"Plot method for epinowcast — plot.epinowcast","text":"plot method class \"epinowcast\".","code":""},{"path":"epiforecasts.io/epinowcast/reference/plot.epinowcast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot method for epinowcast — plot.epinowcast","text":"","code":"# S3 method for epinowcast plot(x, latest_obs = NULL, type = \"nowcast\", log = FALSE, ...)"},{"path":"epiforecasts.io/epinowcast/reference/plot.epinowcast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot method for epinowcast — plot.epinowcast","text":"x data.table output produced epinowcast(). latest_obs data.frame observed data may passed lower level methods. type character string indicating type plot required. Currently supported options \"nowcast\" plots nowcast dataset along latest available observed data (using enw_plot_nowcast_quantiles()), \"posterior_prediction\" plots observations reported time simulated observations  model (using enw_plot_pp_quantiles()). log Logical, defaults FALSE. counts plot log scale. ... Pass additional arguments lower level plot functions.","code":""},{"path":"epiforecasts.io/epinowcast/reference/plot.epinowcast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot method for epinowcast — plot.epinowcast","text":"ggplot2 object","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/reference/remove_profiling.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove profiling statements from a character vector representing stan code — remove_profiling","title":"Remove profiling statements from a character vector representing stan code — remove_profiling","text":"Remove profiling statements character vector representing stan code","code":""},{"path":"epiforecasts.io/epinowcast/reference/remove_profiling.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove profiling statements from a character vector representing stan code — remove_profiling","text":"","code":"remove_profiling(s)"},{"path":"epiforecasts.io/epinowcast/reference/remove_profiling.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove profiling statements from a character vector representing stan code — remove_profiling","text":"s Character vector representing stan code","code":""},{"path":"epiforecasts.io/epinowcast/reference/remove_profiling.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove profiling statements from a character vector representing stan code — remove_profiling","text":"character vector stan code without profiling statements","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/reference/summary.epinowcast.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary method for epinowcast — summary.epinowcast","title":"Summary method for epinowcast — summary.epinowcast","text":"summary method class \"epinowcast\".","code":""},{"path":"epiforecasts.io/epinowcast/reference/summary.epinowcast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary method for epinowcast — summary.epinowcast","text":"","code":"# S3 method for epinowcast summary(object, type = \"nowcast\", ...)"},{"path":"epiforecasts.io/epinowcast/reference/summary.epinowcast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary method for epinowcast — summary.epinowcast","text":"object data.table output epinowcast(). type character string indicating type summary return. Currently supported options \"nowcast\" summaries nowcast posterior using enw_nowcast_summary(), \"nowcast_samples\" returns posterior samples recent nowcast, \"fit\" returns summarised cmdstanr fit using enw_posterior(), \"posterior_prediction\" returns summarised posterior predictions observations used fitting (using enw_pp_summary()). ... Pass additional arguments summary functions.","code":""},{"path":"epiforecasts.io/epinowcast/reference/summary.epinowcast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary method for epinowcast — summary.epinowcast","text":"summary data.frame","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/reference/write_stan_files_no_profile.html","id":null,"dir":"Reference","previous_headings":"","what":"Write copies of the .stan files of a Stan model and its #include files\nwith all profiling statements removed. — write_stan_files_no_profile","title":"Write copies of the .stan files of a Stan model and its #include files\nwith all profiling statements removed. — write_stan_files_no_profile","text":"Write copies .stan files Stan model #include files profiling statements removed.","code":""},{"path":"epiforecasts.io/epinowcast/reference/write_stan_files_no_profile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write copies of the .stan files of a Stan model and its #include files\nwith all profiling statements removed. — write_stan_files_no_profile","text":"","code":"write_stan_files_no_profile(   stan_file,   include_paths = NULL,   target_dir = tempdir() )"},{"path":"epiforecasts.io/epinowcast/reference/write_stan_files_no_profile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write copies of the .stan files of a Stan model and its #include files\nwith all profiling statements removed. — write_stan_files_no_profile","text":"stan_file path .stan file containing Stan program. include_paths Paths directories Stan look files specified #include directives Stan program. target_dir path directory manipulated .stan files without profiling statements stored. avoid overriding original .stan files, different directory original model include_paths.","code":""},{"path":"epiforecasts.io/epinowcast/reference/write_stan_files_no_profile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write copies of the .stan files of a Stan model and its #include files\nwith all profiling statements removed. — write_stan_files_no_profile","text":"list containing path .stan file without profiling statements include_paths included .stan files without profiling statements","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/news/index.html","id":"epinowcast-007","dir":"Changelog","previous_headings":"","what":"epinowcast 0.0.7","title":"epinowcast 0.0.7","text":"Adds additional quality life data processing maximum number (max_confirm) notifications available every row (cumulative incidence notifications) cumulative daily empirical proportion reported calculated user pre-processing. default approach handling reported notifications beyond maximum delay changed. 0.0.6 previous versions notifications beyond maximum delay silently dropped. 0.0.7 now optional behaviour (set using max_delay_strat [enw_preprocess_data()]) default instead add notifications last included delay present. produce accurate long-term nowcasts data available means reported notifications maximum delay need interpreted mind. Adds basic testing documentation preprocessing functions. Adds inference testing setup.","code":""},{"path":"epiforecasts.io/epinowcast/news/index.html","id":"epinowcast-006","dir":"Changelog","previous_headings":"","what":"epinowcast 0.0.6","title":"epinowcast 0.0.6","text":"Simplifies optimises internal functions used estimate parametric daily reporting probability. now exposed user via distribution parameter Lognormal Gamma families tested work. Note parameterisations use standard parameterisations given stan manual (see #42 @adrian-lison @seabbs) Add profiling switch model compilation, allowing toggle profiling (https://mc-stan.org/cmdstanr/articles/profiling.html) /model. Also supports .stan files found include_paths (see #41 #54 @adrian-lison). Fully vectorise likelihood flattening observations pre-specify expected observations vector calculating log-likelihood (see #40 @seabbs). Adds vectorisation zero truncated normal distributions (see #38 @seabbs) hazard_to_prob optimised using vectorisation (see [#53] @adrian-lison @seabbs). prob_to_hazard optimised required cumulative probabilities calculated (see [#53] @adrian-lison @seabbs). Updated use inv_sqrt stan function (see [#60] @seabbs). Added support scoringutils 1.0.0 (see [#61] @seabbs). Added basic example helper function, enw_example(), power examples tests based work done forecast.vocs (see [#61] @seabbs).","code":""},{"path":"epiforecasts.io/epinowcast/news/index.html","id":"epinowcast-005","dir":"Changelog","previous_headings":"","what":"epinowcast 0.0.5","title":"epinowcast 0.0.5","text":"Convert retrospective data date fields class IDate utilising enw_retrospective_data solve esoteric error. Added full argument name include_paths avoid console chatter Adds stanc_options argument enw_model() specifies new default list(\"01\") enables simple pre-compilation optimisations. See optimisation details. Remove inv_logit logit may instead use base R plogit qlogit.","code":""},{"path":"epiforecasts.io/epinowcast/news/index.html","id":"epinowcast-004","dir":"Changelog","previous_headings":"","what":"epinowcast 0.0.4","title":"epinowcast 0.0.4","text":"Add support extracting summarising posterior nowcast samples Package spell check Update read quick start use 40 days delay vs 30 Add section read quick start showing example handling nowcast samples. Add support passing custom models included files enw_model(). Fix bug enw_summarise_samples() returned duplicate samples. Add support passing holidays variable adjusting converting holiday day custom day week (default Sunday set user). Added support scoring natural log scale. represents absolute relative scoring respectively.","code":""},{"path":"epiforecasts.io/epinowcast/news/index.html","id":"epinowcast-003","dir":"Changelog","previous_headings":"","what":"epinowcast 0.0.3","title":"epinowcast 0.0.3","text":"Add support passing priors Add case study vignette Add model definition implementation details. Add support sample scoring (using scoringutils).","code":""},{"path":"epiforecasts.io/epinowcast/news/index.html","id":"epinowcast-002","dir":"Changelog","previous_headings":"","what":"epinowcast 0.0.2","title":"epinowcast 0.0.2","text":"Initial version package broadly working functionality first draft vignettes.","code":""},{"path":"epiforecasts.io/epinowcast/news/index.html","id":"epinowcast-001","dir":"Changelog","previous_headings":"","what":"epinowcast 0.0.1","title":"epinowcast 0.0.1","text":"Initial package version development code","code":""}]
